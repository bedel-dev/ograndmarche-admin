{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { defaultMessages, defaultUserInfos, messageFromClient } from './dataExample';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"messageInput\"];\n\nfunction ChatInnerComponent_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelement(2, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 18)(4, \"a\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 20);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"./assets/media/\" + ctx_r3.getUser(message_r2.user).avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getUser(message_r2.user).name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.time);\n  }\n}\n\nfunction ChatInnerComponent_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21)(2, \"span\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 22);\n    i0.ɵɵtext(5, \" You \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 23);\n    i0.ɵɵelement(7, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r2.time);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", \"./assets/media/\" + ctx_r4.getUser(message_r2.user).avatar, i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"d-flex\": a0,\n    \"d-none\": a1,\n    \"justify-content-start\": a2,\n    \"justify-content-end\": a3\n  };\n};\n\nfunction ChatInnerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 11)(2, \"div\", 12)(3, \"div\", 13);\n    i0.ɵɵtemplate(4, ChatInnerComponent_ng_container_1_ng_container_4_Template, 8, 3, \"ng-container\", 14);\n    i0.ɵɵtemplate(5, ChatInnerComponent_ng_container_1_ng_container_5_Template, 8, 2, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"div\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(7, _c1, !ctx_r0.isDrawer, message_r2.template, message_r2.type === \"in\", message_r2.type !== \"in\"));\n    i0.ɵɵattribute(\"data-kt-element\", \"template-\" + message_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", \"align-items-\" + (message_r2.type === \"in\" ? \"start\" : \"end\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r2.type === \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r2.type !== \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getMessageCssClass(message_r2))(\"innerHTML\", message_r2.text, i0.ɵɵsanitizeHtml);\n  }\n}\n\nexport class ChatInnerComponent {\n  constructor() {\n    this.isDrawer = false;\n    this.class = 'card-body';\n    this.id = this.isDrawer ? 'kt_drawer_chat_messenger_body' : 'kt_chat_messenger_body';\n    this.messages$ = new BehaviorSubject(defaultMessages);\n    this.messagesObs = this.messages$.asObservable();\n  }\n\n  submitMessage() {\n    const text = this.messageInput.nativeElement.value;\n    const newMessage = {\n      user: 2,\n      type: 'out',\n      text,\n      time: 'Just now'\n    };\n    this.addMessage(newMessage); // auto answer\n\n    setTimeout(() => {\n      this.addMessage(messageFromClient);\n    }, 4000); // clear input\n\n    this.messageInput.nativeElement.value = '';\n  }\n\n  addMessage(newMessage) {\n    const messages = [...this.messages$.value];\n    messages.push(newMessage);\n    this.messages$.next(messages);\n  }\n\n  getUser(user) {\n    return defaultUserInfos[user];\n  }\n\n  getMessageCssClass(message) {\n    return `p-5 rounded text-dark fw-bold mw-lg-400px bg-light-${message.type === 'in' ? 'info' : 'primary'} text-${message.type === 'in' ? 'start' : 'end'}`;\n  }\n\n  ngOnInit() {}\n\n}\n\nChatInnerComponent.ɵfac = function ChatInnerComponent_Factory(t) {\n  return new (t || ChatInnerComponent)();\n};\n\nChatInnerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatInnerComponent,\n  selectors: [[\"app-chat-inner\"]],\n  viewQuery: function ChatInnerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageInput = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function ChatInnerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵclassMap(ctx.class);\n    }\n  },\n  inputs: {\n    isDrawer: \"isDrawer\"\n  },\n  decls: 14,\n  vars: 8,\n  consts: [[\"data-kt-element\", \"messages\", \"data-kt-scroll\", \"true\", \"data-kt-scroll-activate\", \"{default: false, lg: true}\", \"data-kt-scroll-max-height\", \"auto\", 1, \"scroll-y\", \"me-n5\", \"pe-5\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", \"pt-4\", 3, \"id\"], [\"rows\", \"1\", \"data-kt-element\", \"input\", \"placeholder\", \"Type a message\", 1, \"form-control\", \"form-control-flush\", \"mb-3\"], [\"messageInput\", \"\"], [1, \"d-flex\", \"flex-stack\"], [1, \"d-flex\", \"align-items-center\", \"me-2\"], [\"type\", \"button\", \"ngbTooltip\", \"Coming soon\", 1, \"btn\", \"btn-sm\", \"btn-icon\", \"btn-active-light-primary\", \"me-1\"], [1, \"bi\", \"bi-paperclip\", \"fs-3\"], [1, \"bi\", \"bi-upload\", \"fs-3\"], [\"type\", \"button\", \"data-kt-element\", \"send\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"mb-10\", 3, \"ngClass\"], [1, \"d-flex\", \"flex-column\", \"align-items\", 3, \"ngClass\"], [1, \"d-flex\", \"align-items-center\", \"mb-2\"], [4, \"ngIf\"], [\"data-kt-element\", \"message-text\", 3, \"ngClass\", \"innerHTML\"], [\"div\", \"\", 1, \"symbol\", \"symbol-35px\", \"symbol-circle\"], [\"alt\", \"Pic\", 3, \"src\"], [1, \"ms-3\"], [\"href\", \"#\", 1, \"fs-5\", \"fw-bolder\", \"text-gray-900\", \"text-hover-primary\", \"me-1\"], [1, \"text-muted\", \"fs-7\", \"mb-1\"], [1, \"me-3\"], [\"href\", \"#\", 1, \"fs-5\", \"fw-bolder\", \"text-gray-900\", \"text-hover-primary\", \"ms-1\"], [1, \"symbol\", \"symbol-35px\", \"symbol-circle\"]],\n  template: function ChatInnerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ChatInnerComponent_ng_container_1_Template, 7, 12, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"textarea\", 3, 4);\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"button\", 7);\n      i0.ɵɵelement(9, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵelement(11, \"i\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ChatInnerComponent_Template_button_click_12_listener() {\n        return ctx.submitMessage();\n      });\n      i0.ɵɵtext(13, \" Send \");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", !ctx.isDrawer ? \"h-300px h-lg-auto\" : \"\");\n      i0.ɵɵattribute(\"data-kt-scroll-dependencies\", ctx.isDrawer ? \"#kt_drawer_chat_messenger_header, #kt_drawer_chat_messenger_footer\" : \"#kt_header, #kt_toolbar, #kt_footer, #kt_chat_messenger_header, #kt_chat_messenger_footer\")(\"data-kt-scroll-wrappers\", ctx.isDrawer ? \"#kt_drawer_chat_messenger_body\" : \"#kt_content, #kt_chat_messenger_body\")(\"data-kt-scroll-offset\", ctx.isDrawer ? \"0px\" : \"-2px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 6, ctx.messagesObs));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"id\", ctx.isDrawer ? \"kt_drawer_chat_messenger_footer\" : \"kt_chat_messenger_footer\");\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAQA,SAASA,eAAT,QAA4C,MAA5C;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,iBAHF,QAMO,eANP;;;;;;;IC0BUC;IACEA;IACEA;IAIFA;IACAA,gCAAkB,CAAlB,EAAkB,GAAlB,EAAkB,EAAlB;IAKIA;IACFA;IACAA;IAAmCA;IAAkBA;IAEzDA;;;;;;IAZMA;IAAAA;IAQAA;IAAAA;IAEiCA;IAAAA;;;;;;IAGvCA;IACEA,gCAAkB,CAAlB,EAAkB,MAAlB,EAAkB,EAAlB;IACqCA;IAAkBA;IACrDA;IAIEA;IACFA;IAEFA;IACEA;IAIFA;IACFA;;;;;;IAduCA;IAAAA;IAWjCA;IAAAA;;;;;;;;;;;;;;;IA9CdA;IACEA,gCASC,CATD,EASC,KATD,EASC,EATD,EASC,CATD,EASC,KATD,EASC,EATD;IAeMA;IAiBAA;IAiBFA;IAEAA;IAKFA;IAEJA;;;;;;IAzDIA;IAAAA;IAMAA;IAKEA;IAAAA;IAGiBA;IAAAA;IAiBAA;IAAAA;IAoBfA;IAAAA,gEAAuC,WAAvC,EAAuCC,eAAvC,EAAuCD,iBAAvC;;;;ADnDV,OAAM,MAAOE,kBAAP,CAAyB;EAc7BC;IAbS,gBAAoB,KAApB;IACa,aAAQ,WAAR;IACH,UAAK,KAAKC,QAAL,GACpB,+BADoB,GAEpB,wBAFe;IAMX,iBAAkD,IAAIR,eAAJ,CAExDC,eAFwD,CAAlD;IAMN,KAAKQ,WAAL,GAAmB,KAAKC,SAAL,CAAeC,YAAf,EAAnB;EACD;;EAEDC,aAAa;IACX,MAAMC,IAAI,GAAG,KAAKC,YAAL,CAAkBC,aAAlB,CAAgCC,KAA7C;IACA,MAAMC,UAAU,GAAiB;MAC/BC,IAAI,EAAE,CADyB;MAE/BC,IAAI,EAAE,KAFyB;MAG/BN,IAH+B;MAI/BO,IAAI,EAAE;IAJyB,CAAjC;IAMA,KAAKC,UAAL,CAAgBJ,UAAhB,EARW,CASX;;IACAK,UAAU,CAAC,MAAK;MACd,KAAKD,UAAL,CAAgBlB,iBAAhB;IACD,CAFS,EAEP,IAFO,CAAV,CAVW,CAaX;;IACA,KAAKW,YAAL,CAAkBC,aAAlB,CAAgCC,KAAhC,GAAwC,EAAxC;EACD;;EAEDK,UAAU,CAACJ,UAAD,EAAyB;IACjC,MAAMM,QAAQ,GAAG,CAAC,GAAG,KAAKb,SAAL,CAAeM,KAAnB,CAAjB;IACAO,QAAQ,CAACC,IAAT,CAAcP,UAAd;IACA,KAAKP,SAAL,CAAee,IAAf,CAAoBF,QAApB;EACD;;EAEDG,OAAO,CAACR,IAAD,EAAa;IAClB,OAAOhB,gBAAgB,CAACgB,IAAD,CAAvB;EACD;;EAEDS,kBAAkB,CAACC,OAAD,EAAsB;IACtC,OAAO,sDACLA,OAAO,CAACT,IAAR,KAAiB,IAAjB,GAAwB,MAAxB,GAAiC,SACnC,SAASS,OAAO,CAACT,IAAR,KAAiB,IAAjB,GAAwB,OAAxB,GAAkC,KAAK,EAFhD;EAGD;;EAEDU,QAAQ,IAAW;;AAnDU;;;mBAAlBvB;AAAkB;;;QAAlBA;EAAkBwB;EAAAC;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;MCrB/B3B;MAmBEA;;MA4DFA;MAEAA;MAMEA;MAQAA,+BAA+B,CAA/B,EAA+B,KAA/B,EAA+B,CAA/B,EAA+B,CAA/B,EAA+B,QAA/B,EAA+B,CAA/B;MAOMA;MACFA;MACAA;MAKEA;MACFA;MAEFA;MAIEA;QAAA,OAAS4B,mBAAT;MAAwB,CAAxB;MAEA5B;MACFA;;;;MArHFA;MAKAA,iOAIC,yBAJD,EAIC4B,wFAJD,EAIC,uBAJD,EAICA,6BAJD;MAYkC5B;MAAAA;MAgElCA;MAAAA","names":["BehaviorSubject","defaultMessages","defaultUserInfos","messageFromClient","i0","message_r2","ChatInnerComponent","constructor","isDrawer","messagesObs","messages$","asObservable","submitMessage","text","messageInput","nativeElement","value","newMessage","user","type","time","addMessage","setTimeout","messages","push","next","getUser","getMessageCssClass","message","ngOnInit","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/mac/Documents/2PAI_MIGRATION_PROJECT/ogrand_marche_admin/src/app/_metronic/partials/content/chat-inner/chat-inner.component.ts","/Users/mac/Documents/2PAI_MIGRATION_PROJECT/ogrand_marche_admin/src/app/_metronic/partials/content/chat-inner/chat-inner.component.html"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport {\n  defaultMessages,\n  defaultUserInfos,\n  messageFromClient,\n  MessageModel,\n  UserInfoModel,\n} from './dataExample';\n\n@Component({\n  selector: 'app-chat-inner',\n  templateUrl: './chat-inner.component.html',\n})\nexport class ChatInnerComponent implements OnInit {\n  @Input() isDrawer: boolean = false;\n  @HostBinding('class') class = 'card-body';\n  @HostBinding('id') id = this.isDrawer\n    ? 'kt_drawer_chat_messenger_body'\n    : 'kt_chat_messenger_body';\n  @ViewChild('messageInput', { static: true })\n  messageInput: ElementRef<HTMLTextAreaElement>;\n\n  private messages$: BehaviorSubject<Array<MessageModel>> = new BehaviorSubject<\n    Array<MessageModel>\n  >(defaultMessages);\n  messagesObs: Observable<Array<MessageModel>>;\n\n  constructor() {\n    this.messagesObs = this.messages$.asObservable();\n  }\n\n  submitMessage(): void {\n    const text = this.messageInput.nativeElement.value;\n    const newMessage: MessageModel = {\n      user: 2,\n      type: 'out',\n      text,\n      time: 'Just now',\n    };\n    this.addMessage(newMessage);\n    // auto answer\n    setTimeout(() => {\n      this.addMessage(messageFromClient);\n    }, 4000);\n    // clear input\n    this.messageInput.nativeElement.value = '';\n  }\n\n  addMessage(newMessage: MessageModel): void {\n    const messages = [...this.messages$.value];\n    messages.push(newMessage);\n    this.messages$.next(messages);\n  }\n\n  getUser(user: number): UserInfoModel {\n    return defaultUserInfos[user];\n  }\n\n  getMessageCssClass(message: MessageModel): string {\n    return `p-5 rounded text-dark fw-bold mw-lg-400px bg-light-${\n      message.type === 'in' ? 'info' : 'primary'\n    } text-${message.type === 'in' ? 'start' : 'end'}`;\n  }\n\n  ngOnInit(): void {}\n}\n","<div\n  class=\"scroll-y me-n5 pe-5\"\n  [ngClass]=\"!isDrawer ? 'h-300px h-lg-auto' : ''\"\n  data-kt-element=\"messages\"\n  data-kt-scroll=\"true\"\n  data-kt-scroll-activate=\"{default: false, lg: true}\"\n  data-kt-scroll-max-height=\"auto\"\n  [attr.data-kt-scroll-dependencies]=\"\n    isDrawer\n      ? '#kt_drawer_chat_messenger_header, #kt_drawer_chat_messenger_footer'\n      : '#kt_header, #kt_toolbar, #kt_footer, #kt_chat_messenger_header, #kt_chat_messenger_footer'\n  \"\n  [attr.data-kt-scroll-wrappers]=\"\n    isDrawer\n      ? '#kt_drawer_chat_messenger_body'\n      : '#kt_content, #kt_chat_messenger_body'\n  \"\n  [attr.data-kt-scroll-offset]=\"isDrawer ? '0px' : '-2px'\"\n>\n  <ng-container *ngFor=\"let message of messagesObs | async\">\n    <div\n      [ngClass]=\"{\n        'd-flex': !isDrawer,\n        'd-none': message.template,\n        'justify-content-start': message.type === 'in',\n        'justify-content-end': message.type !== 'in'\n      }\"\n      [attr.data-kt-element]=\"'template-' + message.type\"\n      class=\"mb-10\"\n    >\n      <div\n        class=\"d-flex flex-column align-items\"\n        [ngClass]=\"'align-items-' + (message.type === 'in' ? 'start' : 'end')\"\n      >\n        <div class=\"d-flex align-items-center mb-2\">\n          <ng-container *ngIf=\"message.type === 'in'\">\n            <div div class=\"symbol symbol-35px symbol-circle\">\n              <img\n                alt=\"Pic\"\n                [src]=\"'./assets/media/' + getUser(message.user).avatar\"\n              />\n            </div>\n            <div class=\"ms-3\">\n              <a\n                href=\"#\"\n                class=\"fs-5 fw-bolder text-gray-900 text-hover-primary me-1\"\n              >\n                {{ getUser(message.user).name }}\n              </a>\n              <span class=\"text-muted fs-7 mb-1\">{{ message.time }}</span>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"message.type !== 'in'\">\n            <div class=\"me-3\">\n              <span class=\"text-muted fs-7 mb-1\">{{ message.time }}</span>\n              <a\n                href=\"#\"\n                class=\"fs-5 fw-bolder text-gray-900 text-hover-primary ms-1\"\n              >\n                You\n              </a>\n            </div>\n            <div class=\"symbol symbol-35px symbol-circle\">\n              <img\n                alt=\"Pic\"\n                [src]=\"'./assets/media/' + getUser(message.user).avatar\"\n              />\n            </div>\n          </ng-container>\n        </div>\n\n        <div\n          [ngClass]=\"getMessageCssClass(message)\"\n          data-kt-element=\"message-text\"\n          [innerHTML]=\"message.text\"\n        ></div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<div\n  class=\"card-footer pt-4\"\n  [id]=\"\n    isDrawer ? 'kt_drawer_chat_messenger_footer' : 'kt_chat_messenger_footer'\n  \"\n>\n  <textarea\n    #messageInput\n    class=\"form-control form-control-flush mb-3\"\n    rows=\"1\"\n    data-kt-element=\"input\"\n    placeholder=\"Type a message\"\n  ></textarea>\n\n  <div class=\"d-flex flex-stack\">\n    <div class=\"d-flex align-items-center me-2\">\n      <button\n        class=\"btn btn-sm btn-icon btn-active-light-primary me-1\"\n        type=\"button\"\n        ngbTooltip=\"Coming soon\"\n      >\n        <i class=\"bi bi-paperclip fs-3\"></i>\n      </button>\n      <button\n        class=\"btn btn-sm btn-icon btn-active-light-primary me-1\"\n        type=\"button\"\n        ngbTooltip=\"Coming soon\"\n      >\n        <i class=\"bi bi-upload fs-3\"></i>\n      </button>\n    </div>\n    <button\n      class=\"btn btn-primary\"\n      type=\"button\"\n      data-kt-element=\"send\"\n      (click)=\"submitMessage()\"\n    >\n      Send\n    </button>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}