{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment'; // import intlTelInput from 'intl-tel-input';\n\nimport { CountryISO, PhoneNumberFormat, SearchCountryField } from \"ngx-intl-tel-input\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ngx-intl-tel-input\";\n\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 16)(2, \"div\", 17);\n    i0.ɵɵtext(3, \" Les informations de connexion sont incorrectes \");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction LoginComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2, \" Patientez... \");\n    i0.ɵɵelement(3, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", \"block\");\n  }\n}\n\nfunction LoginComponent_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵtext(2, \"Continuer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_template_28_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21)(2, \"span\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext().message;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r6, \" \");\n  }\n}\n\nfunction LoginComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LoginComponent_ng_template_28_ng_container_0_Template, 4, 1, \"ng-container\", 3);\n  }\n\n  if (rf & 2) {\n    const control_r5 = ctx.control;\n    const validation_r7 = ctx.validation;\n    i0.ɵɵproperty(\"ngIf\", control_r5.hasError(validation_r7) && (control_r5.dirty || control_r5.touched));\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nconst _c2 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Ajouter un numero de telephone\",\n    control: a2\n  };\n};\n\nconst _c3 = function (a2) {\n  return {\n    validation: \"email\",\n    message: \"Numero invalid\",\n    control: a2\n  };\n};\n\nconst _c4 = function (a2) {\n  return {\n    validation: \"minlength\",\n    message: \"Numero doit contenir 10 chiffres\",\n    control: a2\n  };\n};\n\nconst _c5 = function (a2) {\n  return {\n    validation: \"maxlength\",\n    message: \"Numero doit contenir 10 chiffres\",\n    control: a2\n  };\n};\n\nconst _c6 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"ajouter  un mot de passe\",\n    control: a2\n  };\n};\n\nconst _c7 = function (a2) {\n  return {\n    validation: \"minlength\",\n    message: \"le mot de passe doit avoir au moin 3 caracteres\",\n    control: a2\n  };\n};\n\nconst _c8 = function (a2) {\n  return {\n    validation: \"maxlength\",\n    message: \"le mot de passe\",\n    control: a2\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, route, router, http, changeDetector) {\n      this.fb = fb;\n      this.authService = authService;\n      this.route = route;\n      this.router = router;\n      this.http = http;\n      this.changeDetector = changeDetector; // KeenThemes mock, change it to:\n      // defaultAuth: any = {\n      //   email: 'admin@demo.com',\n      //   password: 'demo',\n      // };\n\n      this.defaultAuth = {\n        email: '',\n        password: ''\n      };\n      this.hasErrors = false;\n      this.isLoading = false; // private fields\n\n      this.unsubscribe = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n      this.authLocalStorageToken = `${environment.appVersion}-${environment.USERDATA_KEY}`;\n      this.separateDialCode = true;\n      this.SearchCountryField = SearchCountryField;\n      this.CountryISO = CountryISO;\n      this.PhoneNumberFormat = PhoneNumberFormat;\n      this.preferredCountries = [CountryISO.CôteDIvoire, CountryISO.France]; // this.currentUser$ = this.currentUserSubject.asObservable();\n      // this.isLoading$ = this.authService.isLoading$;\n      //  this.isLoadingSubject = new BehaviorSubject<boolean>(false);\n      //  this.currentUserSubject = new BehaviorSubject<UserType>(undefined);\n      //  this.currentUser$ = this.currentUserSubject.asObservable();\n      //  this.isLoading$ = this.isLoadingSubject.asObservable();\n      // const subscr = this.getUserByToken().subscribe();\n      // this.unsubscribe.push(subscr);\n      // redirect to home if already logged in\n\n      if (this.authService.currentUserValue) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    get currentUserValue() {\n      return this.currentUserSubject.value;\n    }\n\n    set currentUserValue(user) {\n      this.currentUserSubject.next(user);\n    }\n\n    ngOnInit() {\n      //  this.isLoadingSubject = new BehaviorSubject<boolean>(false);\n      this.initForm();\n      console.log(this.f.email.value);\n      this.selectedCountryISO = 'CI'; // get return url from route parameters or default to '/'\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n    } // @ViewChild('#phone') telInput: { nativeElement: Element; };\n\n\n    ngAfterViewInit() {// const input = document.querySelector(\"#phone\");\n      // console.log(input);\n      //   intlTelInput(this.telInput, {\n      //   utilsScript: \"https://cdn.jsdelivr.net/npm/intl-tel-input@14.0.3/build/js/utils.js\",\n      //   customPlaceholder: function(selectedCountryPlaceholder, selectedCountryData) {\n      //     return \"e.g. \" + selectedCountryPlaceholder;\n      //   },\n      // });\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    initForm() {\n      this.loginForm = this.fb.group({\n        email: ['', Validators.compose([Validators.required, //Validators.email,\n        Validators.minLength(10), Validators.maxLength(10) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ])],\n        password: ['', Validators.compose([Validators.required, Validators.minLength(3) //Validators.maxLength(4),\n        ])]\n      });\n    }\n\n    submit() {\n      // this.currentUserSubject.next(this.user)\n      // this.router.navigate([this.returnUrl]);\n      // console.log(user$)\n      //  this.router.navigate([this.returnUrl]);\n      // this.currentUserSubject.next([]);\n      //\n      //   const headers = new HttpHeaders()\n      //   .append(\n      //     'Content-Type',\n      //     'application/json'\n      //   );\n      //   // let user = {\n      //   //   \"contact\":\"+225 0769424374\",\n      //   //   \"password\":\"123\"\n      //   // }\n      //   let user = {\n      //     \"contact\":this.f.email.value,\n      //     \"password\":this.f.password.value\n      //   }\n      //   const body=JSON.stringify(user);\n      //   this.http.post(GlobalConstants.api_auth+'/login.json', body, {\n      //     headers: headers,\n      //   }).subscribe((users: any)=>{\n      //    // this.currentUserValue?.setAuth(users)\n      //     this.currentUserSubject.next(users);\n      //     if(users['status'] ==\"not connected\"){\n      //       this.localUser = {};\n      //     }else if(users['status']==\"Connected\"){\n      //       this.localUser = users;\n      //     }else{\n      //       this.localUser = null;\n      //     }\n      //     this.router.navigate(['/']);\n      //   },next =>{\n      //     // console.log(\"next :\"+next)\n      //     // this.hasErrors = true;\n      //   },() =>{\n      //     if(this.localUser!== null){\n      //       console.log(\"this.localUser :\"+this.localUser)\n      //       this.hasErrors = false;\n      //       this.isLoading = false\n      //       this.setAuthFromLocalStorage(this.localUser)\n      //       let d = localStorage.getItem('user')\n      //\n      //       this.router.navigate(['/']);\n      //      // console.log(\"hasError 1 egal :\"+this.router.navigate([this.returnUrl]))\n      //     }else{\n      //       this.isLoading = false\n      //       this.hasErrors = true;\n      //       this.state\n      //       this.changeDetector.detectChanges();\n      //       console.log(\"hasError error egal :\"+this.hasErrors)\n      //      // this.state\n      //     }\n      //   });\n      var v = this.f.email.value.number;\n      var number = this.f.email.value.dialCode + \" \" + v;\n      console.log(this.f.email);\n      this.isLoading = true;\n      const loginSubscr = this.authService.login(number, this.f.password.value).subscribe(user => {\n        if (user) {\n          this.hasErrors = false;\n          this.isLoading = false;\n          this.changeDetector.detectChanges();\n          this.router.navigate([this.returnUrl]);\n          console.log(user);\n        } else {\n          this.isLoading = false;\n          this.hasErrors = true;\n          this.changeDetector.detectChanges();\n        }\n      });\n      this.unsubscribe.push(loginSubscr);\n    }\n\n    get state() {\n      console.log('get state :' + this.hasErrors);\n      return this.hasErrors;\n    }\n\n    setAuthFromLocalStorage(user) {\n      // store auth authToken/refreshToken/epiresIn in local storage to keep user logged in between page refreshes\n      if (user) {\n        localStorage.setItem(this.authLocalStorageToken, JSON.stringify(user));\n        return true;\n      }\n\n      return false;\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe.forEach(sb => sb.unsubscribe()); //this.iti.destroy();\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 30,\n    vars: 51,\n    consts: [[\"novalidate\", \"novalidate\", \"id\", \"kt_login_signin_form\", 1, \"form\", \"w-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-11\"], [1, \"text-dark\", \"fw-bolder\", \"mb-3\"], [4, \"ngIf\"], [1, \"fv-row\", \"mb-8\"], [1, \"form-label\", \"fs-6\", \"fw-bolder\", \"text-dark\"], [\"customPlaceholder\", \"0709344574\", \"type\", \"tel\", \"id\", \"phone\", \"name\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"off\", 1, \"form-control\", \"bg-transparent\", 2, \"padding-right\", \"calc(15.5em + 1.55rem)!important\", \"padding-top\", \"0px\", \"padding-bottom\", \"0px\", 3, \"selectedCountryISO\", \"preferredCountries\", \"enableAutoCountrySelect\", \"enablePlaceholder\", \"searchCountryFlag\", \"numberFormat\", \"searchCountryField\", \"ngClass\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"fv-row\", \"mb-3\"], [1, \"form-label\", \"fw-bolder\", \"text-dark\", \"fs-6\", \"mb-0\"], [\"type\", \"password\", \"name\", \"password\", \"autocomplete\", \"off\", \"formControlName\", \"password\", 1, \"form-control\", \"bg-transparent\", 3, \"ngClass\"], [1, \"d-flex\", \"flex-stack\", \"flex-wrap\", \"gap-3\", \"fs-base\", \"fw-semibold\", \"mb-8\"], [\"routerLink\", \"/auth/forgot-password\", 1, \"link-primary\"], [1, \"d-grid\", \"mb-10\"], [\"type\", \"submit\", \"id\", \"kt_sign_in_submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"formError\", \"\"], [1, \"mb-lg-15\", \"alert\", \"alert-danger\"], [1, \"alert-text\", \"font-weight-bold\"], [1, \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"], [1, \"indicator-label\"], [1, \"fv-plugins-message-container\"], [\"role\", \"alert\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \" Connectez vous \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 4, 0, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Numero de telephone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"ngx-intl-tel-input\", 6);\n        i0.ɵɵelementContainer(9, 7)(10, 7)(11, 7)(12, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementContainer(17, 7)(18, 7)(19, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 11);\n        i0.ɵɵelement(21, \"div\");\n        i0.ɵɵelementStart(22, \"a\", 12);\n        i0.ɵɵtext(23, \" Mot de passe oubli\\u00E9 ? \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 13)(25, \"button\", 14);\n        i0.ɵɵtemplate(26, LoginComponent_ng_container_26_Template, 4, 2, \"ng-container\", 3);\n        i0.ɵɵtemplate(27, LoginComponent_ng_container_27_Template, 3, 0, \"ng-container\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(28, LoginComponent_ng_template_28_Template, 1, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(29);\n\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.state);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"selectedCountryISO\", ctx.selectedCountryISO)(\"preferredCountries\", ctx.preferredCountries)(\"enableAutoCountrySelect\", false)(\"enablePlaceholder\", true)(\"searchCountryFlag\", true)(\"numberFormat\", ctx.PhoneNumberFormat.National)(\"searchCountryField\", i0.ɵɵpureFunction2(28, _c0, ctx.SearchCountryField.Iso2, ctx.SearchCountryField.Name))(\"ngClass\", i0.ɵɵpureFunction2(31, _c1, ctx.loginForm.controls[\"email\"].invalid, ctx.loginForm.controls[\"email\"].valid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(34, _c2, ctx.loginForm.controls[\"email\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(36, _c3, ctx.loginForm.controls[\"email\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(38, _c4, ctx.loginForm.controls[\"email\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(40, _c5, ctx.loginForm.controls[\"email\"]));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(42, _c1, ctx.loginForm.controls[\"password\"].invalid, ctx.loginForm.controls[\"password\"].valid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(45, _c6, ctx.loginForm.controls[\"password\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(47, _c7, ctx.loginForm.controls[\"password\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(49, _c8, ctx.loginForm.controls[\"password\"]));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i5.NgTemplateOutlet, i3.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.NgxIntlTelInputComponent, i6.NativeElementInjectorDirective],\n    styles: [\"[_nghost-%COMP%]{width:100%}@media (min-width: 992px){[_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]{width:100%;max-width:450px}[_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{width:100%}}.fv-plugins-message-container[_ngcontent-%COMP%]{color:#f1416c}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}