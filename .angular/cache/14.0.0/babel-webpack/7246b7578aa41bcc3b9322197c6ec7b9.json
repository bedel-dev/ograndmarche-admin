{"ast":null,"code":"import { ChangeDetectionStrategy, Component, ElementRef, Input } from '@angular/core';\nimport { InlineSVGDirective } from './inline-svg.directive';\nimport { InlineSVGService } from './inline-svg.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./inline-svg.service\";\n\nvar InlineSVGComponent = function () {\n  function InlineSVGComponent(_inlineSVGService, el) {\n    this._inlineSVGService = _inlineSVGService;\n    this._el = el;\n  }\n\n  InlineSVGComponent.prototype.ngAfterViewInit = function () {\n    this._updateContent();\n  };\n\n  InlineSVGComponent.prototype.ngOnChanges = function (changes) {\n    if (changes['content']) {\n      this._updateContent();\n    }\n  };\n\n  InlineSVGComponent.prototype._updateContent = function () {\n    this._inlineSVGService.insertEl(this.context, this._el.nativeElement, this.content, this.replaceContents, this.prepend);\n  };\n\n  InlineSVGComponent.ɵfac = function InlineSVGComponent_Factory(t) {\n    return new (t || InlineSVGComponent)(i0.ɵɵdirectiveInject(i1.InlineSVGService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  InlineSVGComponent.ɵcmp = i0.ɵɵdefineComponent({\n    type: InlineSVGComponent,\n    selectors: [[\"inline-svg\"]],\n    inputs: {\n      context: \"context\",\n      content: \"content\",\n      replaceContents: \"replaceContents\",\n      prepend: \"prepend\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function InlineSVGComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return InlineSVGComponent;\n}();\n\nexport { InlineSVGComponent };\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InlineSVGComponent, [{\n    type: Component,\n    args: [{\n      selector: 'inline-svg',\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i1.InlineSVGService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    context: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    replaceContents: [{\n      type: Input\n    }],\n    prepend: [{\n      type: Input\n    }]\n  });\n})();","map":{"version":3,"names":["ChangeDetectionStrategy","Component","ElementRef","Input","InlineSVGDirective","InlineSVGService","i0","i1","InlineSVGComponent","_inlineSVGService","el","_el","prototype","ngAfterViewInit","_updateContent","ngOnChanges","changes","insertEl","context","nativeElement","content","replaceContents","prepend","ɵfac","InlineSVGComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","template","InlineSVGComponent_Template","rf","ctx","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush"],"sources":["/Users/mac/Documents/2PAI_MIGRATION_PROJECT/ogrand_marche_admin/node_modules/ng-inline-svg-2/lib_esmodule/inline-svg.component.js"],"sourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef, Input } from '@angular/core';\nimport { InlineSVGDirective } from './inline-svg.directive';\nimport { InlineSVGService } from './inline-svg.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./inline-svg.service\";\nvar InlineSVGComponent = (function () {\n    function InlineSVGComponent(_inlineSVGService, el) {\n        this._inlineSVGService = _inlineSVGService;\n        this._el = el;\n    }\n    InlineSVGComponent.prototype.ngAfterViewInit = function () {\n        this._updateContent();\n    };\n    InlineSVGComponent.prototype.ngOnChanges = function (changes) {\n        if (changes['content']) {\n            this._updateContent();\n        }\n    };\n    InlineSVGComponent.prototype._updateContent = function () {\n        this._inlineSVGService.insertEl(this.context, this._el.nativeElement, this.content, this.replaceContents, this.prepend);\n    };\n    InlineSVGComponent.ɵfac = function InlineSVGComponent_Factory(t) { return new (t || InlineSVGComponent)(i0.ɵɵdirectiveInject(i1.InlineSVGService), i0.ɵɵdirectiveInject(i0.ElementRef)); };\n    InlineSVGComponent.ɵcmp = i0.ɵɵdefineComponent({ type: InlineSVGComponent, selectors: [[\"inline-svg\"]], inputs: { context: \"context\", content: \"content\", replaceContents: \"replaceContents\", prepend: \"prepend\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function InlineSVGComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n    return InlineSVGComponent;\n}());\nexport { InlineSVGComponent };\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InlineSVGComponent, [{\n        type: Component,\n        args: [{\n                selector: 'inline-svg',\n                template: '',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: i1.InlineSVGService }, { type: i0.ElementRef }]; }, { context: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }], replaceContents: [{\n            type: Input\n        }], prepend: [{\n            type: Input\n        }] }); })();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}