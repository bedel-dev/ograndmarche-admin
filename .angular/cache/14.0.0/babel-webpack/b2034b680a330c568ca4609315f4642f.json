{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./theme-mode.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-inline-svg-2\";\n\nfunction ThemeModeSwitcherComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen061.svg\")(\"ngClass\", ctx_r3.toggleBtnIconClass);\n  }\n}\n\nfunction ThemeModeSwitcherComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen060.svg\")(\"ngClass\", ctx_r4.toggleBtnIconClass);\n  }\n}\n\nfunction ThemeModeSwitcherComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ThemeModeSwitcherComponent_ng_container_1_ng_container_1_Template, 2, 2, \"ng-container\", 1);\n    i0.ɵɵtemplate(2, ThemeModeSwitcherComponent_ng_container_1_ng_container_2_Template, 2, 2, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const mode_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", mode_r2 === \"dark\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", mode_r2 === \"light\");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\n\nfunction ThemeModeSwitcherComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function ThemeModeSwitcherComponent_ng_container_4_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.switchMode(\"light\"));\n    });\n    i0.ɵɵelementStart(3, \"span\", 7);\n    i0.ɵɵelement(4, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 9);\n    i0.ɵɵtext(6, \"Light\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 5)(8, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function ThemeModeSwitcherComponent_ng_container_4_Template_a_click_8_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.switchMode(\"dark\"));\n    });\n    i0.ɵɵelementStart(9, \"span\", 7);\n    i0.ɵɵelement(10, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\", 9);\n    i0.ɵɵtext(12, \"Dark\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function ThemeModeSwitcherComponent_ng_container_4_Template_a_click_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.switchMode(\"system\"));\n    });\n    i0.ɵɵelementStart(15, \"span\", 7);\n    i0.ɵɵelement(16, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"span\", 9);\n    i0.ɵɵtext(18, \"System\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const menuMode_r5 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, menuMode_r5 === \"light\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen060.svg\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, menuMode_r5 === \"dark\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen061.svg\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, menuMode_r5 === \"system\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen062.svg\");\n  }\n}\n\nexport class ThemeModeSwitcherComponent {\n  constructor(modeService) {\n    this.modeService = modeService;\n    this.toggleBtnClass = '';\n    this.toggleBtnIconClass = 'svg-icon-2';\n    this.menuPlacement = 'bottom-end';\n    this.menuTrigger = \"{default: 'click', lg: 'hover'}\";\n  }\n\n  ngOnInit() {\n    this.mode$ = this.modeService.mode.asObservable();\n    this.menuMode$ = this.modeService.menuMode.asObservable();\n  }\n\n  switchMode(_mode) {\n    this.modeService.switchMode(_mode);\n  }\n\n}\n\nThemeModeSwitcherComponent.ɵfac = function ThemeModeSwitcherComponent_Factory(t) {\n  return new (t || ThemeModeSwitcherComponent)(i0.ɵɵdirectiveInject(i1.ThemeModeService));\n};\n\nThemeModeSwitcherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThemeModeSwitcherComponent,\n  selectors: [[\"app-theme-mode-switcher\"]],\n  inputs: {\n    toggleBtnClass: \"toggleBtnClass\",\n    toggleBtnIconClass: \"toggleBtnIconClass\",\n    menuPlacement: \"menuPlacement\",\n    menuTrigger: \"menuTrigger\"\n  },\n  decls: 6,\n  vars: 7,\n  consts: [[\"data-kt-menu-trigger\", \"{default: 'click', lg: 'hover'}\", \"data-kt-menu-attach\", \"parent\", \"data-kt-menu-placement\", \"bottom-end\", 1, \"btn\", \"btn-icon\", 3, \"ngClass\"], [4, \"ngIf\"], [\"data-kt-menu\", \"true\", 1, \"menu\", \"menu-sub\", \"menu-sub-dropdown\", \"menu-column\", \"menu-rounded\", \"menu-title-gray-700\", \"menu-icon-muted\", \"menu-active-bg\", \"menu-state-primary\", \"fw-semibold\", \"py-4\", \"fs-base\", \"w-175px\"], [1, \"svg-icon\", \"theme-light-hide\", 3, \"inlineSVG\", \"ngClass\"], [1, \"svg-icon\", \"theme-dark-hide\", 3, \"inlineSVG\", \"ngClass\"], [1, \"menu-item\", \"px-3\", \"my-0\"], [1, \"menu-link\", \"px-3\", \"py-2\", 3, \"ngClass\", \"click\"], [\"data-kt-element\", \"icon\", 1, \"menu-icon\"], [1, \"svg-icon\", \"svg-icon-3\", 3, \"inlineSVG\"], [1, \"menu-title\"]],\n  template: function ThemeModeSwitcherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ThemeModeSwitcherComponent_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, ThemeModeSwitcherComponent_ng_container_4_Template, 19, 12, \"ng-container\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.toggleBtnClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 3, ctx.mode$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 5, ctx.menuMode$));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.InlineSVGDirective, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;IAIIA;IACEA;IAEFA;;;;;IAFQA;IAAAA,8EAA+D,SAA/D,EAA+DC,yBAA/D;;;;;;IAGRD;IACEA;IAEFA;;;;;IAFQA;IAAAA,8EAA+D,SAA/D,EAA+DE,yBAA/D;;;;;;IANVF;IACEA;IAIAA;IAIFA;;;;;IARiBA;IAAAA;IAIAA;IAAAA;;;;;;;;;;;;;;IAYjBA;IAEEA,+BAAiC,CAAjC,EAAiC,GAAjC,EAAiC,CAAjC;IAC8EA;MAAAA;MAAA;MAAA,OAASA,iCAAW,OAAX,EAAT;IAA4B,CAA5B;IAC1EA;IACEA;IACFA;IACAA;IAAyBA;IAAKA;IAMlCA,+BAAiC,CAAjC,EAAiC,GAAjC,EAAiC,CAAjC;IAC6EA;MAAAA;MAAA;MAAA,OAASA,iCAAW,MAAX,EAAT;IAA2B,CAA3B;IACzEA;IACEA;IACFA;IACAA;IAAyBA;IAAIA;IAMjCA,gCAAiC,EAAjC,EAAiC,GAAjC,EAAiC,CAAjC;IAC+EA;MAAAA;MAAA;MAAA,OAASA,iCAAW,QAAX,EAAT;IAA6B,CAA7B;IAC3EA;IACEA;IACFA;IACAA;IAAyBA;IAAMA;IAKrCA;;;;;IA/BmCA;IAAAA;IAErBA;IAAAA;IASqBA;IAAAA;IAErBA;IAAAA;IASqBA;IAAAA;IAErBA;IAAAA;;;;ACvChB,OAAM,MAAOG,0BAAP,CAAiC;EAQrCC,YAAoBC,WAApB,EAAiD;IAA7B;IAPX,sBAAyB,EAAzB;IACA,0BAA6B,YAA7B;IACA,qBAAwB,YAAxB;IACA,mBAAsB,iCAAtB;EAI4C;;EAErDC,QAAQ;IACN,KAAKC,KAAL,GAAa,KAAKF,WAAL,CAAiBG,IAAjB,CAAsBC,YAAtB,EAAb;IACA,KAAKC,SAAL,GAAiB,KAAKL,WAAL,CAAiBM,QAAjB,CAA0BF,YAA1B,EAAjB;EACD;;EAEDG,UAAU,CAACC,KAAD,EAAqB;IAC7B,KAAKR,WAAL,CAAiBO,UAAjB,CAA4BC,KAA5B;EACD;;AAjBoC;;;mBAA1BV,4BAA0BH;AAAA;;;QAA1BG;EAA0BW;EAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPvCvB;MAEEA;;MAUFA;MAIAA;MAGEA;;MAoCFA;;;;MAvD0BA;MAETA;MAAAA;MAiBAA;MAAAA","names":["i0","ctx_r3","ctx_r4","ThemeModeSwitcherComponent","constructor","modeService","ngOnInit","mode$","mode","asObservable","menuMode$","menuMode","switchMode","_mode","selectors","inputs","toggleBtnClass","toggleBtnIconClass","menuPlacement","menuTrigger","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/mac/Documents/2PAI_MIGRATION_PROJECT/ogrand_marche_admin/src/app/_metronic/partials/layout/theme-mode-switcher/theme-mode-switcher.component.html","/Users/mac/Documents/2PAI_MIGRATION_PROJECT/ogrand_marche_admin/src/app/_metronic/partials/layout/theme-mode-switcher/theme-mode-switcher.component.ts"],"sourcesContent":["<!-- begin::Menu toggle -->\n<div class=\"btn btn-icon\" [ngClass]=\"toggleBtnClass\" data-kt-menu-trigger=\"{default: 'click', lg: 'hover'}\"\n  data-kt-menu-attach=\"parent\" data-kt-menu-placement=\"bottom-end\">\n  <ng-container *ngIf=\"mode$ | async as mode\">\n    <ng-container *ngIf=\"mode === 'dark'\">\n      <span [inlineSVG]=\"'./assets/media/icons/duotune/general/gen061.svg'\" [ngClass]=\"toggleBtnIconClass\"\n        class=\"svg-icon theme-light-hide\"></span>\n    </ng-container>\n    <ng-container *ngIf=\"mode === 'light'\">\n      <span [inlineSVG]=\"'./assets/media/icons/duotune/general/gen060.svg'\" [ngClass]=\"toggleBtnIconClass\"\n        class=\"svg-icon theme-dark-hide\"></span>\n    </ng-container>\n  </ng-container>\n</div>\n<!-- end::Menu toggle -->\n\n<!-- begin::Menu -->\n<div\n  class='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-title-gray-700 menu-icon-muted menu-active-bg menu-state-primary fw-semibold py-4 fs-base w-175px'\n  data-kt-menu='true'>\n  <ng-container *ngIf=\"menuMode$ | async as menuMode\">\n    <!-- begin::Menu item  -->\n    <div class='menu-item px-3 my-0'>\n      <a class=\"menu-link px-3 py-2\" [ngClass]=\"{'active': menuMode === 'light'}\" (click)=\"switchMode('light')\">\n        <span class='menu-icon' data-kt-element='icon'>\n          <span [inlineSVG]=\"'./assets/media/icons/duotune/general/gen060.svg'\" class=\"svg-icon svg-icon-3\"></span>\n        </span>\n        <span class='menu-title'>Light</span>\n      </a>\n    </div>\n    <!-- end::Menu item -->\n\n    <!-- begin::Menu item  -->\n    <div class='menu-item px-3 my-0'>\n      <a class=\"menu-link px-3 py-2\" [ngClass]=\"{'active': menuMode === 'dark'}\" (click)=\"switchMode('dark')\">\n        <span class='menu-icon' data-kt-element='icon'>\n          <span [inlineSVG]=\"'./assets/media/icons/duotune/general/gen061.svg'\" class=\"svg-icon svg-icon-3\"></span>\n        </span>\n        <span class='menu-title'>Dark</span>\n      </a>\n    </div>\n    <!-- end::Menu item -->\n\n    <!-- begin::Menu item  -->\n    <div class='menu-item px-3 my-0'>\n      <a class=\"menu-link px-3 py-2\" [ngClass]=\"{'active': menuMode === 'system'}\" (click)=\"switchMode('system')\">\n        <span class='menu-icon' data-kt-element='icon'>\n          <span [inlineSVG]=\"'./assets/media/icons/duotune/general/gen062.svg'\" class=\"svg-icon svg-icon-3\"></span>\n        </span>\n        <span class='menu-title'>System</span>\n      </a>\n    </div>\n    <!-- end::Menu item -->\n\n  </ng-container>\n\n</div>\n<!-- end::Menu -->\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ThemeModeService, ThemeModeType } from './theme-mode.service';\n\n@Component({\n  selector: 'app-theme-mode-switcher',\n  templateUrl: './theme-mode-switcher.component.html',\n})\nexport class ThemeModeSwitcherComponent implements OnInit {\n  @Input() toggleBtnClass: string = '';\n  @Input() toggleBtnIconClass: string = 'svg-icon-2';\n  @Input() menuPlacement: string = 'bottom-end';\n  @Input() menuTrigger: string = \"{default: 'click', lg: 'hover'}\";\n  mode$: Observable<ThemeModeType>;\n  menuMode$: Observable<ThemeModeType>;\n\n  constructor(private modeService: ThemeModeService) {}\n\n  ngOnInit(): void {\n    this.mode$ = this.modeService.mode.asObservable();\n    this.menuMode$ = this.modeService.menuMode.asObservable();\n  }\n\n  switchMode(_mode: ThemeModeType): void {\n    this.modeService.switchMode(_mode);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}