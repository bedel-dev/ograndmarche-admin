{"ast":null,"code":"import { getCSSVariableValue } from '../../../../../kt/_utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"ng-apexcharts\";\nexport let MixedWidget10Component = /*#__PURE__*/(() => {\n  class MixedWidget10Component {\n    constructor() {\n      this.chartColor = '';\n      this.chartOptions = {};\n    }\n\n    ngOnInit() {\n      this.chartOptions = getChartOptions(this.chartHeight, this.chartColor);\n    }\n\n  }\n\n  MixedWidget10Component.ɵfac = function MixedWidget10Component_Factory(t) {\n    return new (t || MixedWidget10Component)();\n  };\n\n  MixedWidget10Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MixedWidget10Component,\n    selectors: [[\"app-mixed-widget10\"]],\n    inputs: {\n      chartColor: \"chartColor\",\n      chartHeight: \"chartHeight\"\n    },\n    decls: 13,\n    vars: 16,\n    consts: [[1, \"card-body\", \"d-flex\", \"flex-column\", \"p-0\"], [1, \"flex-grow-1\", \"card-p\", \"pb-0\"], [1, \"d-flex\", \"flex-stack\", \"flex-wrap\"], [1, \"me-2\"], [\"href\", \"#\", 1, \"text-dark\", \"text-hover-primary\", \"fw-bolder\", \"fs-3\"], [1, \"text-muted\", \"fs-7\", \"fw-bold\"], [1, \"fw-bolder\", \"fs-3\", 3, \"ngClass\"], [1, \"mixed-widget-7-chart\", \"card-rounded-bottom\"], [\"chartRef\", \"\"], [3, \"series\", \"chart\", \"xaxis\", \"yaxis\", \"dataLabels\", \"stroke\", \"legend\", \"fill\", \"states\", \"tooltip\", \"colors\", \"markers\", \"plotOptions\"]],\n    template: function MixedWidget10Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4);\n        i0.ɵɵtext(5, \" Generate Reports \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7, \" Finance and accounting reports \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtext(9, \"$24,500\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 7, 8);\n        i0.ɵɵelement(12, \"apx-chart\", 9);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", \"text-\" + ctx.chartColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"height\", ctx.chartHeight);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"xaxis\", ctx.chartOptions.xaxis)(\"yaxis\", ctx.chartOptions.yaxis)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"stroke\", ctx.chartOptions.stroke)(\"legend\", ctx.chartOptions.legend)(\"fill\", ctx.chartOptions.fill)(\"states\", ctx.chartOptions.states)(\"tooltip\", ctx.chartOptions.tooltip)(\"colors\", ctx.chartOptions.colors)(\"markers\", ctx.chartOptions.markers)(\"plotOptions\", ctx.chartOptions.plotOptions);\n      }\n    },\n    dependencies: [i1.NgClass, i2.ChartComponent],\n    encapsulation: 2\n  });\n  return MixedWidget10Component;\n})();\n\nfunction getChartOptions(chartHeight, chartColor) {\n  const labelColor = getCSSVariableValue('--kt-gray-800');\n  const strokeColor = getCSSVariableValue('--kt-gray-300');\n  const baseColor = getCSSVariableValue('--kt-' + chartColor);\n  const lightColor = getCSSVariableValue('--kt-' + chartColor + '-light');\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [15, 25, 15, 40, 20, 50]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [baseColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: 'front',\n        stroke: {\n          color: strokeColor,\n          width: 1,\n          dashArray: 3\n        }\n      },\n      tooltip: {\n        enabled: false\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 60,\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      }\n    },\n    colors: [lightColor],\n    markers: {\n      colors: [lightColor],\n      strokeColors: [baseColor],\n      strokeWidth: 3\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}