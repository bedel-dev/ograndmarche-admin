{"ast":null,"code":"import { getCSSVariableValue } from '../../../../../kt/_utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../dropdown-menus/dropdown-menu1/dropdown-menu1.component\";\nimport * as i3 from \"ng-inline-svg-2\";\nimport * as i4 from \"ng-apexcharts\";\nexport let MixedWidget3Component = /*#__PURE__*/(() => {\n  class MixedWidget3Component {\n    constructor() {\n      this.chartColor = '';\n      this.chartOptions = {};\n    }\n\n    ngOnInit() {\n      this.chartOptions = getChartOptions(this.chartHeight);\n    }\n\n  }\n\n  MixedWidget3Component.ɵfac = function MixedWidget3Component_Factory(t) {\n    return new (t || MixedWidget3Component)();\n  };\n\n  MixedWidget3Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MixedWidget3Component,\n    selectors: [[\"app-mixed-widget3\"]],\n    inputs: {\n      chartColor: \"chartColor\",\n      chartHeight: \"chartHeight\"\n    },\n    decls: 34,\n    vars: 19,\n    consts: [[1, \"card-header\", \"border-0\", 3, \"ngClass\"], [1, \"card-title\", \"fw-bolder\", \"text-white\"], [1, \"card-toolbar\"], [\"type\", \"button\", \"data-kt-menu-trigger\", \"click\", \"data-kt-menu-placement\", \"bottom-end\", \"data-kt-menu-flip\", \"top-end\", 1, \"btn\", \"btn-sm\", \"btn-icon\", \"btn-color-white\", \"btn-active-white\", \"border-0\", \"me-n3\", 3, \"ngClass\"], [1, \"svg-icon\", \"svg-icon-2\", 3, \"inlineSVG\"], [1, \"card-body\", \"p-0\"], [1, \"mixed-widget-12-chart\", \"card-rounded-bottom\", 3, \"ngClass\"], [\"chartRef\", \"\"], [3, \"series\", \"chart\", \"xaxis\", \"yaxis\", \"dataLabels\", \"stroke\", \"legend\", \"fill\", \"states\", \"tooltip\", \"colors\", \"markers\", \"plotOptions\"], [1, \"card-rounded\", \"bg-body\", \"mt-n10\", \"position-relative\", \"card-px\", \"py-15\"], [1, \"row\", \"g-0\", \"mb-7\"], [1, \"col\", \"mx-5\"], [1, \"fs-6\", \"text-gray-400\"], [1, \"fs-2\", \"fw-bolder\", \"text-gray-800\"], [1, \"row\", \"g-0\"]],\n    template: function MixedWidget3Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Sales Progress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n        i0.ɵɵelement(5, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-dropdown-menu1\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6, 7);\n        i0.ɵɵelement(10, \"apx-chart\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11)(14, \"div\", 12);\n        i0.ɵɵtext(15, \"Avarage Sale\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtext(17, \"$650\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"div\", 12);\n        i0.ɵɵtext(20, \"Comissions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 13);\n        i0.ɵɵtext(22, \"$29,500\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 14)(24, \"div\", 11)(25, \"div\", 12);\n        i0.ɵɵtext(26, \"Revenue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 13);\n        i0.ɵɵtext(28, \"$55,000\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 11)(30, \"div\", 12);\n        i0.ɵɵtext(31, \"Expenses\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 13);\n        i0.ɵɵtext(33, \"$1,130,600\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", \"bg-\" + ctx.chartColor);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", \"btn-active-color-\" + ctx.chartColor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen024.svg\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"height\", ctx.chartHeight);\n        i0.ɵɵproperty(\"ngClass\", \"bg-\" + ctx.chartColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"xaxis\", ctx.chartOptions.xaxis)(\"yaxis\", ctx.chartOptions.yaxis)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"stroke\", ctx.chartOptions.stroke)(\"legend\", ctx.chartOptions.legend)(\"fill\", ctx.chartOptions.fill)(\"states\", ctx.chartOptions.states)(\"tooltip\", ctx.chartOptions.tooltip)(\"colors\", ctx.chartOptions.colors)(\"markers\", ctx.chartOptions.markers)(\"plotOptions\", ctx.chartOptions.plotOptions);\n      }\n    },\n    dependencies: [i1.NgClass, i2.DropdownMenu1Component, i3.InlineSVGDirective, i4.ChartComponent],\n    encapsulation: 2\n  });\n  return MixedWidget3Component;\n})();\n\nfunction getChartOptions(chartHeight) {\n  const labelColor = getCSSVariableValue('--kt-gray-500');\n  const borderColor = getCSSVariableValue('--kt-gray-200');\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [35, 65, 75, 55, 45, 60, 55]\n    }, {\n      name: 'Revenue',\n      data: [40, 70, 80, 60, 50, 65, 60]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'bar',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '30%',\n        borderRadius: 5\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 100,\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    fill: {\n      type: ['solid', 'solid'],\n      opacity: [0.25, 1]\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      },\n      marker: {\n        show: false\n      }\n    },\n    colors: ['#ffffff', '#ffffff'],\n    grid: {\n      borderColor: borderColor,\n      strokeDashArray: 4,\n      yaxis: {\n        lines: {\n          show: true\n        }\n      },\n      padding: {\n        left: 20,\n        right: 20\n      }\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}