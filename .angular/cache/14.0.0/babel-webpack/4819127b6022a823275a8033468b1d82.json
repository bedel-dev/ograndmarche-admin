{"ast":null,"code":"import { getCSSVariableValue } from '../../../../../kt/_utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng-apexcharts\";\nexport let ChartsWidget5Component = /*#__PURE__*/(() => {\n  class ChartsWidget5Component {\n    constructor() {\n      this.chartOptions = {};\n    }\n\n    ngOnInit() {\n      this.chartOptions = getChartOptions();\n    }\n\n  }\n\n  ChartsWidget5Component.ɵfac = function ChartsWidget5Component_Factory(t) {\n    return new (t || ChartsWidget5Component)();\n  };\n\n  ChartsWidget5Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsWidget5Component,\n    selectors: [[\"app-charts-widget5\"]],\n    decls: 17,\n    vars: 15,\n    consts: [[1, \"card-header\", \"border-0\", \"pt-5\"], [1, \"card-title\", \"align-items-start\", \"flex-column\"], [1, \"card-label\", \"fw-bolder\", \"fs-3\", \"mb-1\"], [1, \"text-muted\", \"fw-bold\", \"fs-7\"], [\"data-kt-buttons\", \"true\", 1, \"card-toolbar\"], [\"id\", \"kt_charts_widget_5_year_btn\", 1, \"btn\", \"btn-sm\", \"btn-color-muted\", \"btn-active\", \"btn-active-primary\", \"active\", \"px-4\", \"me-1\"], [\"id\", \"kt_charts_widget_5_month_btn\", 1, \"btn\", \"btn-sm\", \"btn-color-muted\", \"btn-active\", \"btn-active-primary\", \"px-4\", \"me-1\"], [\"id\", \"kt_charts_widget_5_week_btn\", 1, \"btn\", \"btn-sm\", \"btn-color-muted\", \"btn-active\", \"btn-active-primary\", \"px-4\"], [1, \"card-body\"], [\"id\", \"kt_charts_widget_5_chart\"], [\"chartRef\", \"\"], [3, \"series\", \"chart\", \"xaxis\", \"yaxis\", \"dataLabels\", \"stroke\", \"legend\", \"fill\", \"states\", \"tooltip\", \"colors\", \"markers\", \"plotOptions\"]],\n    template: function ChartsWidget5Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Recent Customers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"More than 500 new customers\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"a\", 5);\n        i0.ɵɵtext(8, \" Year \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"a\", 6);\n        i0.ɵɵtext(10, \" Month \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 7);\n        i0.ɵɵtext(12, \" Week \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 9, 10);\n        i0.ɵɵelement(16, \"apx-chart\", 11);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵstyleProp(\"height\", \"350px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"xaxis\", ctx.chartOptions.xaxis)(\"yaxis\", ctx.chartOptions.yaxis)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"stroke\", ctx.chartOptions.stroke)(\"legend\", ctx.chartOptions.legend)(\"fill\", ctx.chartOptions.fill)(\"states\", ctx.chartOptions.states)(\"tooltip\", ctx.chartOptions.tooltip)(\"colors\", ctx.chartOptions.colors)(\"markers\", ctx.chartOptions.markers)(\"plotOptions\", ctx.chartOptions.plotOptions);\n      }\n    },\n    dependencies: [i1.ChartComponent],\n    encapsulation: 2\n  });\n  return ChartsWidget5Component;\n})();\n\nfunction getChartOptions() {\n  const labelColor = getCSSVariableValue('--kt-gray-500');\n  const borderColor = getCSSVariableValue('--kt-gray-200');\n  const baseColor = getCSSVariableValue('--kt-primary');\n  const secondaryColor = getCSSVariableValue('--kt-info');\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [40, 50, 65, 70, 50, 30]\n    }, {\n      name: 'Revenue',\n      data: [-30, -40, -55, -60, -40, -20]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'bar',\n      stacked: true,\n      height: 350,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '12%',\n        borderRadius: 5\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    yaxis: {\n      min: -80,\n      max: 80,\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      }\n    },\n    colors: [baseColor, secondaryColor],\n    grid: {\n      borderColor: borderColor,\n      strokeDashArray: 4,\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}