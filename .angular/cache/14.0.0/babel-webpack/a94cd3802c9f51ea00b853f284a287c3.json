{"ast":null,"code":"import { EventHandlerUtil } from '../_utils';\n\nclass ThemeMode {\n  constructor() {\n    this.menu = null;\n    this.element = null;\n\n    this.getParamName = postfix => {\n      const ktName = document.body.hasAttribute('data-kt-name');\n      const name = ktName ? ktName + '_' : '';\n      return 'kt_' + name + 'theme_mode_' + postfix;\n    };\n\n    this.getMode = () => {\n      var _a;\n\n      const modeParam = this.getParamName('value');\n      const menuMode = this.getMenuMode();\n      const defaultMode = 'light';\n\n      if (!localStorage) {\n        return defaultMode;\n      }\n\n      const ls = localStorage.getItem(modeParam);\n\n      if (ls) {\n        return ls;\n      }\n\n      const dataTheme = (_a = this.element) === null || _a === void 0 ? void 0 : _a.getAttribute('data-theme');\n\n      if (dataTheme) {\n        return dataTheme;\n      }\n\n      if (!menuMode) {\n        return defaultMode;\n      }\n\n      if (menuMode === 'system') {\n        return this.getSystemMode();\n      }\n\n      return menuMode;\n    };\n\n    this.setMode = (mode, menuMode) => {\n      var _a, _b, _c; // Check input values\n\n\n      if (mode !== 'light' && mode !== 'dark') {\n        return;\n      } // Get param names\n\n\n      const modeParam = this.getParamName('value');\n      const menuModeParam = this.getParamName('menu'); // Reset mode if system mode was changed\n\n      if (menuMode === 'system') {\n        if (this.getSystemMode() !== mode) {\n          mode = this.getSystemMode();\n        }\n      } // Check menu mode\n\n\n      if (!menuMode) {\n        menuMode = mode;\n      } // Read active menu mode value\n\n\n      const activeMenuItem = ((_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector('[data-kt-element=\"mode\"][data-kt-value=\"' + menuMode + '\"]')) || null; // Enable switching state\n\n      (_b = this.element) === null || _b === void 0 ? void 0 : _b.setAttribute(\"data-kt-theme-mode-switching\", \"true\"); // Set mode to the target element\n\n      (_c = this.element) === null || _c === void 0 ? void 0 : _c.setAttribute('data-theme', mode); // Disable switching state\n\n      const self = this;\n      setTimeout(function () {\n        var _a;\n\n        (_a = self.element) === null || _a === void 0 ? void 0 : _a.removeAttribute(\"data-kt-theme-mode-switching\");\n      }, 300); // Store mode value in storage\n\n      if (localStorage) {\n        localStorage.setItem(modeParam, mode);\n      } // Set active menu item\n\n\n      if (activeMenuItem && localStorage) {\n        localStorage.setItem(menuModeParam, menuMode);\n        this.setActiveMenuItem(activeMenuItem);\n      } // Flip images\n\n\n      this.flipImages();\n    };\n\n    this.getMenuMode = () => {\n      var _a;\n\n      const menuModeParam = this.getParamName('menu');\n      const menuItem = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector('.active[data-kt-element=\"mode\"]');\n      const dataKTValue = menuItem === null || menuItem === void 0 ? void 0 : menuItem.getAttribute('data-kt-value');\n\n      if (dataKTValue) {\n        return dataKTValue;\n      }\n\n      if (!menuModeParam) {\n        return '';\n      }\n\n      const ls = localStorage ? localStorage.getItem(menuModeParam) : null;\n      return ls || '';\n    };\n\n    this.getSystemMode = () => {\n      return window.matchMedia('(prefers-color-scheme: dark)') ? 'dark' : 'light';\n    };\n\n    this.initMode = () => {\n      this.setMode(this.getMode(), this.getMenuMode());\n\n      if (this.element) {\n        EventHandlerUtil.trigger(this.element, 'kt.thememode.init');\n      }\n    };\n\n    this.getActiveMenuItem = () => {\n      var _a;\n\n      return ((_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector('[data-kt-element=\"mode\"][data-kt-value=\"' + this.getMenuMode() + '\"]')) || null;\n    };\n\n    this.setActiveMenuItem = item => {\n      var _a;\n\n      const menuModeParam = this.getParamName('menu');\n      const menuMode = item.getAttribute('data-kt-value');\n      const activeItem = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelector('.active[data-kt-element=\"mode\"]');\n\n      if (activeItem) {\n        activeItem.classList.remove('active');\n      }\n\n      item.classList.add('active');\n\n      if (localStorage && menuMode && menuModeParam) {\n        localStorage.setItem(menuModeParam, menuMode);\n      }\n    };\n\n    this.handleMenu = () => {\n      var _a, _b;\n\n      (_b = (_a = this.menu) === null || _a === void 0 ? void 0 : _a.querySelectorAll('[data-kt-element=\"mode\"]')) === null || _b === void 0 ? void 0 : _b.forEach(item => {\n        item.addEventListener('click', e => {\n          e.preventDefault();\n          const menuMode = item.getAttribute('data-kt-value');\n          const mode = menuMode === 'system' ? this.getSystemMode() : menuMode;\n\n          if (mode) {\n            this.setMode(mode, menuMode);\n          }\n        });\n      });\n    };\n\n    this.flipImages = () => {\n      var _a;\n\n      (_a = document.querySelectorAll('[data-kt-img-dark]')) === null || _a === void 0 ? void 0 : _a.forEach(item => {\n        if (item.tagName === 'IMG') {\n          if (this.getMode() === 'dark' && item.hasAttribute('data-kt-img-dark')) {\n            item.setAttribute('data-kt-img-light', item.getAttribute('src') || '');\n            item.setAttribute('src', item.getAttribute('data-kt-img-dark') || '');\n          } else if (this.getMode() === 'light' && item.hasAttribute('data-kt-img-light')) {\n            item.setAttribute('data-kt-img-dark', item.getAttribute('src') || '');\n            item.setAttribute('src', item.getAttribute('data-kt-img-light') || '');\n          }\n        } else {\n          if (this.getMode() === 'dark' && item.hasAttribute('data-kt-img-dark')) {\n            item.setAttribute('data-kt-img-light', item.getAttribute('src') || '');\n            item.style.backgroundImage = \"url('\" + item.getAttribute('data-kt-img-dark') + \"')\";\n          } else if (this.getMode() === 'light' && item.hasAttribute('data-kt-img-light')) {\n            item.setAttribute('data-kt-img-dark', item.getAttribute('src') || '');\n            item.style.backgroundImage = \"url('\" + item.getAttribute('data-kt-img-light') + \"')\";\n          }\n        }\n      });\n    };\n\n    this.on = (name, hander) => {\n      if (this.element) {\n        return EventHandlerUtil.on(this.element, name, hander);\n      }\n    };\n\n    this.off = (name, handlerId) => {\n      if (this.element) {\n        return EventHandlerUtil.off(this.element, name, handlerId);\n      }\n    };\n\n    this.init = () => {\n      this.menu = document.querySelector('[data-kt-element=\"theme-mode-menu\"]');\n      this.element = document.documentElement;\n      this.initMode();\n\n      if (this.menu) {\n        this.handleMenu();\n      }\n    };\n  }\n\n}\n\nconst ThemeModeComponent = new ThemeMode(); // Initialize app on document ready => ThemeModeComponent.init()\n\nexport { ThemeModeComponent };","map":null,"metadata":{},"sourceType":"module"}