{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../../environments/environment';\nimport { GlobalConstants } from 'src/app/common/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_USERS_URL = `${environment.apiUrl}/auth`;\nconst API_USERS_LOGIN = `${environment.api_auth}/login.json`;\nexport let AuthHTTPService = /*#__PURE__*/(() => {\n  class AuthHTTPService {\n    constructor(http) {\n      this.http = http;\n    } // public methods\n\n\n    login(email, password) {\n      const headers = new HttpHeaders().append('Content-Type', 'application/json');\n      let user = {\n        \"contact\": email,\n        \"password\": password\n      };\n      const body = JSON.stringify(user);\n      return this.http.post(GlobalConstants.api_auth + '/login.json', body, {\n        headers: headers\n      });\n    }\n\n    login1() {\n      // this.currentUserSubject.next(this.user)\n      // this.router.navigate([this.returnUrl]);\n      //  this.router.navigate([this.returnUrl]);\n      // this.currentUserSubject.next([]);\n      //  this.isLoading = true\n      const headers = new HttpHeaders().append('Content-Type', 'application/json'); //   // let user = {\n      //   //   \"contact\":\"+225 0769424374\",\n      //   //   \"password\":\"123\"\n      //   // }\n\n      let user = {\n        \"contact\": \"+225 0769424374\",\n        \"password\": \"123\"\n      };\n      const body = JSON.stringify(user);\n      console.log(\"je suis ici\");\n      var request = this.http.post(GlobalConstants.api_auth + '/login.json', body, {\n        headers: headers\n      }).subscribe(users => {\n        console.log(\"je suis ici 2\");\n        console.log(users); // this.currentUserValue?.setAuth(users)\n        // this.currentUserSubject.next(users);\n        // if(users['status'] ==\"not connected\"){\n        //   this.localUser = {};\n        // }else if(users['status']==\"Connected\"){\n        //   this.localUser = users;\n        // }else{\n        //   this.localUser = null;\n        // }\n        // this.router.navigate(['/']);\n      }, next => {// console.log(\"next :\"+next)\n        // this.hasErrors = true;\n      }, () => {// if(this.localUser!== null){\n        //   console.log(\"this.localUser :\"+this.localUser)\n        //   this.hasErrors = false;\n        //   this.isLoading = false\n        //   this.setAuthFromLocalStorage(this.localUser)\n        //   let d = localStorage.getItem('user')\n        //   this.changeDetector.detectChanges();\n        //   this.router.navigate(['/']);\n        //  // console.log(\"hasError 1 egal :\"+this.router.navigate([this.returnUrl]))\n        // }else{\n        //   this.isLoading = false\n        //   this.hasErrors = true;\n        //   this.state\n        //   this.changeDetector.detectChanges();\n        //   console.log(\"hasError error egal :\"+this.hasErrors)\n        //  // this.state\n        // }\n      }); //return request;\n    } // CREATE =>  POST: add a new user to the server\n\n\n    createUser(user) {\n      return this.http.post(API_USERS_URL, user);\n    } // Your server should check email => If email exists send link to the user and return true | If email doesn't exist return false\n\n\n    forgotPassword(email) {\n      return this.http.post(`${API_USERS_URL}/forgot-password`, {\n        email\n      });\n    }\n\n    getUserByToken(token, id) {\n      const httpHeaders = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n      return this.http.get(GlobalConstants.api_auth + \"/getuser/\" + id + \".json\", {\n        headers: httpHeaders\n      });\n    }\n\n  }\n\n  AuthHTTPService.ɵfac = function AuthHTTPService_Factory(t) {\n    return new (t || AuthHTTPService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthHTTPService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthHTTPService,\n    factory: AuthHTTPService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthHTTPService;\n})();","map":null,"metadata":{},"sourceType":"module"}