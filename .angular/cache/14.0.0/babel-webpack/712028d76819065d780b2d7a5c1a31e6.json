{"ast":null,"code":"import { NotificationType } from \"../services/notification\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/notification/notification.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction NotificationComponent_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    notification: a0\n  };\n};\n\nfunction NotificationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, NotificationComponent_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const notification_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r1 = i0.ɵɵreference(3);\n\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.className(notification_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c0, notification_r3));\n  }\n}\n\nfunction NotificationComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NotificationComponent_ng_template_2_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const notification_r5 = restoredCtx.notification;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.close(notification_r5));\n    });\n    i0.ɵɵelementStart(4, \"button\");\n    i0.ɵɵtext(5, \"cancel\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const notification_r5 = ctx.notification;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(notification_r5.title);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(notification_r5.message);\n  }\n}\n\nexport let NotificationComponent = /*#__PURE__*/(() => {\n  class NotificationComponent {\n    constructor(_notificationSvc, changeDetector) {\n      this._notificationSvc = _notificationSvc;\n      this.changeDetector = changeDetector;\n      this.notifications = [];\n    }\n\n    _addNotification(notification) {\n      this.notifications.push(notification);\n\n      if (notification.timeout !== 0) {\n        setTimeout(() => this.close(notification), notification.timeout);\n      }\n    }\n\n    ngOnInit() {\n      this._subscription = this._notificationSvc.getObservable().subscribe(notification => this._addNotification(notification));\n    }\n\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n    }\n\n    close(notification) {\n      this.notifications = this.notifications.filter(notif => notif.id !== notification.id);\n      console.log(\"notification :\", this.notifications);\n      this.changeDetector.detectChanges();\n    }\n\n    className(notification) {\n      let style;\n\n      switch (notification.type) {\n        case NotificationType.success:\n          style = 'success';\n          break;\n\n        case NotificationType.warning:\n          style = 'warning';\n          break;\n\n        case NotificationType.error:\n          style = 'error';\n          break;\n\n        default:\n          style = 'info';\n          break;\n      }\n\n      return style;\n    }\n\n  }\n\n  NotificationComponent.ɵfac = function NotificationComponent_Factory(t) {\n    return new (t || NotificationComponent)(i0.ɵɵdirectiveInject(i1.NotificationService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  NotificationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationComponent,\n    selectors: [[\"app-notification\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"notifications\"], [\"class\", \"notification\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"notificationTpl\", \"\"], [1, \"notification\", 3, \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\", 1, \"title\"], [3, \"click\"], [1, \"message\"]],\n    template: function NotificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, NotificationComponent_div_1_Template, 2, 5, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, NotificationComponent_ng_template_2_Template, 8, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.notifications);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgTemplateOutlet],\n    styles: [\".notifications[_ngcontent-%COMP%]{position:fixed;top:0;right:0;z-index:1000;min-width:400px;max-width:400px}.notifications[_ngcontent-%COMP%]   .notification[_ngcontent-%COMP%]{margin:5px;border-radius:5px;color:#fff;overflow:hidden}.notifications[_ngcontent-%COMP%]   .notification[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{background:rgba(0,0,0,.6);padding-left:10px;font-weight:700}.notifications[_ngcontent-%COMP%]   .notification[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{background:rgba(0,0,0,.4);padding:10px;max-height:200px;overflow-y:auto}.notifications[_ngcontent-%COMP%]   .notification.info[_ngcontent-%COMP%]{background-color:#bdbdbde6}.notifications[_ngcontent-%COMP%]   .notification.success[_ngcontent-%COMP%]{background-color:#1b9e77e6}.notifications[_ngcontent-%COMP%]   .notification.warning[_ngcontent-%COMP%]{background-color:#d95f02e6}.notifications[_ngcontent-%COMP%]   .notification.error[_ngcontent-%COMP%]{background-color:#f64747e6}\"]\n  });\n  return NotificationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}