{"ast":null,"code":"import { getCSSVariableValue } from '../../../../../kt/_utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../../dropdown-menus/dropdown-menu1/dropdown-menu1.component\";\nimport * as i3 from \"ng-inline-svg-2\";\nimport * as i4 from \"ng-apexcharts\";\nexport let MixedWidget2Component = /*#__PURE__*/(() => {\n  class MixedWidget2Component {\n    constructor() {\n      this.chartColor = '';\n      this.strokeColor = '';\n      this.chartHeight = '';\n      this.chartOptions = {};\n    }\n\n    ngOnInit() {\n      this.chartOptions = getChartOptions(this.chartHeight, this.chartColor, this.strokeColor);\n    }\n\n  }\n\n  MixedWidget2Component.ɵfac = function MixedWidget2Component_Factory(t) {\n    return new (t || MixedWidget2Component)();\n  };\n\n  MixedWidget2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MixedWidget2Component,\n    selectors: [[\"app-mixed-widget2\"]],\n    inputs: {\n      chartColor: \"chartColor\",\n      strokeColor: \"strokeColor\",\n      chartHeight: \"chartHeight\"\n    },\n    decls: 30,\n    vars: 20,\n    consts: [[1, \"card-header\", \"border-0\", \"py-5\", 3, \"ngClass\"], [1, \"card-title\", \"fw-bolder\", \"text-white\"], [1, \"card-toolbar\"], [\"type\", \"button\", \"data-kt-menu-trigger\", \"click\", \"data-kt-menu-placement\", \"bottom-end\", \"data-kt-menu-flip\", \"top-end\", 1, \"btn\", \"btn-sm\", \"btn-icon\", \"btn-color-white\", \"btn-active-white\", \"btn-active-color-\", \"border-0\", \"me-n3\"], [1, \"svg-icon\", \"svg-icon-2\", 3, \"inlineSVG\"], [1, \"card-body\", \"p-0\"], [1, \"mixed-widget-2-chart\", \"card-rounded-bottom\", 3, \"ngClass\"], [\"chartRef\", \"\"], [3, \"series\", \"chart\", \"xaxis\", \"yaxis\", \"dataLabels\", \"stroke\", \"legend\", \"fill\", \"states\", \"tooltip\", \"colors\", \"markers\", \"plotOptions\"], [1, \"card-p\", \"mt-n20\", \"position-relative\"], [1, \"row\", \"g-0\"], [1, \"col\", \"bg-light-warning\", \"px-6\", \"py-8\", \"rounded-2\", \"me-7\", \"mb-7\"], [1, \"svg-icon\", \"svg-icon-3x\", \"svg-icon-warning\", \"d-block\", \"my-2\", 3, \"inlineSVG\"], [\"href\", \"#\", 1, \"text-warning\", \"fw-bold\", \"fs-6\"], [1, \"col\", \"bg-light-primary\", \"px-6\", \"py-8\", \"rounded-2\", \"mb-7\"], [1, \"svg-icon\", \"svg-icon-3x\", \"svg-icon-primary\", \"d-block\", \"my-2\", 3, \"inlineSVG\"], [\"href\", \"#\", 1, \"text-primary\", \"fw-bold\", \"fs-6\"], [1, \"col\", \"bg-light-danger\", \"px-6\", \"py-8\", \"rounded-2\", \"me-7\"], [1, \"svg-icon\", \"svg-icon-3x\", \"svg-icon-danger\", \"d-block\", \"my-2\", 3, \"inlineSVG\"], [\"href\", \"#\", 1, \"text-danger\", \"fw-bold\", \"fs-6\", \"mt-2\"], [1, \"col\", \"bg-light-success\", \"px-6\", \"py-8\", \"rounded-2\"], [1, \"svg-icon\", \"svg-icon-3x\", \"svg-icon-success\", \"d-block\", \"my-2\", 3, \"inlineSVG\"], [\"href\", \"#\", 1, \"text-success\", \"fw-bold\", \"fs-6\", \"mt-2\"]],\n    template: function MixedWidget2Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Sales Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n        i0.ɵɵelement(5, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-dropdown-menu1\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6, 7);\n        i0.ɵɵelement(10, \"apx-chart\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11);\n        i0.ɵɵelement(14, \"span\", 12);\n        i0.ɵɵelementStart(15, \"a\", 13);\n        i0.ɵɵtext(16, \" Weekly Sales \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 14);\n        i0.ɵɵelement(18, \"span\", 15);\n        i0.ɵɵelementStart(19, \"a\", 16);\n        i0.ɵɵtext(20, \" New Projects \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 10)(22, \"div\", 17);\n        i0.ɵɵelement(23, \"span\", 18);\n        i0.ɵɵelementStart(24, \"a\", 19);\n        i0.ɵɵtext(25, \" Item Orders \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 20);\n        i0.ɵɵelement(27, \"span\", 21);\n        i0.ɵɵelementStart(28, \"a\", 22);\n        i0.ɵɵtext(29, \" Bug Reports \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", \"bg-\" + ctx.chartColor);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen024.svg\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", \"bg-\" + ctx.chartColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"xaxis\", ctx.chartOptions.xaxis)(\"yaxis\", ctx.chartOptions.yaxis)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"stroke\", ctx.chartOptions.stroke)(\"legend\", ctx.chartOptions.legend)(\"fill\", ctx.chartOptions.fill)(\"states\", ctx.chartOptions.states)(\"tooltip\", ctx.chartOptions.tooltip)(\"colors\", ctx.chartOptions.colors)(\"markers\", ctx.chartOptions.markers)(\"plotOptions\", ctx.chartOptions.plotOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen032.svg\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/finance/fin006.svg\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/abstract/abs027.svg\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/communication/com010.svg\");\n      }\n    },\n    dependencies: [i1.NgClass, i2.DropdownMenu1Component, i3.InlineSVGDirective, i4.ChartComponent],\n    encapsulation: 2\n  });\n  return MixedWidget2Component;\n})();\n\nfunction getChartOptions(chartHeight, chartColor, strokeColor) {\n  const labelColor = getCSSVariableValue('--kt-gray-500');\n  const borderColor = getCSSVariableValue('--kt-gray-200');\n  const color = getCSSVariableValue('--kt-' + chartColor);\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [30, 45, 32, 70, 40, 40, 40]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        top: 5,\n        left: 0,\n        blur: 3,\n        color: strokeColor,\n        opacity: 0.5\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 0\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [strokeColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: 'front',\n        stroke: {\n          color: borderColor,\n          width: 1,\n          dashArray: 3\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 80,\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      },\n      marker: {\n        show: false\n      }\n    },\n    colors: ['transparent'],\n    markers: {\n      colors: [color],\n      strokeColors: [strokeColor],\n      strokeWidth: 3\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}