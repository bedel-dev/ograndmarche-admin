{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { Notification, NotificationType } from \"../notification\";\nimport * as i0 from \"@angular/core\";\nexport let NotificationService = /*#__PURE__*/(() => {\n  class NotificationService {\n    constructor() {\n      this._subject = new Subject();\n      this._idx = 0;\n    }\n\n    getObservable() {\n      return this._subject.asObservable();\n    }\n\n    info(title, message, timeout = 2000) {\n      this._subject.next(new Notification(this._idx++, NotificationType.info, title, message, timeout));\n    }\n\n    success(title, message, timeout = 2000) {\n      console.log(title, message);\n\n      this._subject.next(new Notification(this._idx++, NotificationType.success, title, message, timeout));\n    }\n\n    warning(title, message, timeout = 2000) {\n      this._subject.next(new Notification(this._idx++, NotificationType.warning, title, message, timeout));\n    }\n\n    error(title, message, timeout = 2000) {\n      this._subject.next(new Notification(this._idx++, NotificationType.error, title, message, timeout));\n    }\n\n  }\n\n  NotificationService.ɵfac = function NotificationService_Factory(t) {\n    return new (t || NotificationService)();\n  };\n\n  NotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotificationService,\n    factory: NotificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationService;\n})();","map":null,"metadata":{},"sourceType":"module"}