{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/modules/auth/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/users/user-service.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ngx-intl-tel-input\";\n\nfunction AutorisationComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Ajouter un libelle \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutorisationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 18)(2, \"div\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\n\nfunction AutorisationComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Enregistrer\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction AutorisationComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"span\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", \"block\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Patientez...\", \" \", \" \");\n  }\n}\n\nexport let AutorisationComponent = /*#__PURE__*/(() => {\n  class AutorisationComponent {\n    constructor(authService, cdr, fb, userService) {\n      this.authService = authService;\n      this.cdr = cdr;\n      this.fb = fb;\n      this.userService = userService;\n      this.showChangeEmailForm = false;\n      this.showChangePasswordForm = false;\n      this.isLoading$ = new BehaviorSubject(false);\n      this.unsubscribe = [];\n      this.namefile = \"\";\n      this.file_data = '';\n      this.autorisation = [];\n      this.stateinfo = false;\n      this.allreadyexiste = false;\n      this.success = false;\n      this.errorfeildName = false;\n      this.accesautorisation = false;\n      this.AddUserForm = new FormGroup({\n        libelle: new FormControl()\n      });\n      const loadingSubscr = this.isLoading$.asObservable().subscribe(res => this.isLoading = res);\n      this.unsubscribe.push(loadingSubscr);\n    }\n\n    ngOnInit() {\n      this.getAutorisation();\n    }\n\n    get f() {\n      return this.AddUserForm.controls;\n    }\n\n    getAutorisation() {\n      this.userService.getAllautorisation().subscribe(res => {\n        console.log(res.status);\n\n        if (res.status == true) {\n          for (let r of res.data) {\n            //console.log(r)\n            this.autorisation.push(r);\n          }\n\n          this.cdr.detectChanges();\n        } else {}\n      }, error => {\n        this.authService.logout();\n      }); // console.log(this.autorisation)\n    }\n\n    saveSettings() {\n      this.isLoading$.next(true);\n      var statework = true;\n\n      if (this.f.libelle.value == null) {\n        statework = false;\n        this.errorfeildName = true;\n        this.isLoading$.next(false);\n      } else {\n        this.errorfeildName = false;\n        statework = true;\n      }\n\n      console.log(statework);\n      this.cdr.detectChanges();\n\n      if (!this.errorfeildName) {\n        this.userService.AddAutorisation(this.f).subscribe(rep => {\n          if (rep.response.code == \"402\") {\n            this.cdr.detectChanges();\n            this.isLoading$.next(false);\n            this.message = \"information deja enregistré changez le numero\";\n            this.stateinfo = true; // this.allreadyexiste = true;\n\n            this.cdr.detectChanges();\n          } else if (rep.response.code == \"200\") {\n            this.accesautorisation = true;\n            this.isLoading$.next(false);\n            this.message = \"information enregistré\";\n            this.success = true;\n            this.allreadyexiste = true;\n            this.cdr.detectChanges();\n          } else {\n            //console.log(rep.response.message)\n            this.message = \"errer lors de l'enregistrément\";\n            this.stateinfo = true;\n            this.isLoading$.next(false);\n            this.cdr.detectChanges();\n          }\n        }, error => {\n          this.message = \"errer lors de l'enregistrément\";\n          this.stateinfo = true;\n          this.isLoading$.next(false); //this.authService.logout()\n        }, () => {\n          setTimeout(() => {\n            this.success = false;\n            this.stateinfo = false;\n            this.cdr.detectChanges();\n          }, 2500);\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe.forEach(sb => sb.unsubscribe());\n    }\n\n  }\n\n  AutorisationComponent.ɵfac = function AutorisationComponent_Factory(t) {\n    return new (t || AutorisationComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.UserServiceService));\n  };\n\n  AutorisationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AutorisationComponent,\n    selectors: [[\"app-autorisation\"]],\n    decls: 22,\n    vars: 7,\n    consts: [[1, \"card\", \"mb-5\", \"mb-xl-10\"], [\"role\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#kt_account_profile_details\", \"aria-expanded\", \"true\", \"aria-controls\", \"kt_account_profile_details\", 1, \"card-header\", \"border-0\", \"cursor-pointer\"], [1, \"card-title\", \"m-0\"], [1, \"fw-bolder\", \"m-0\"], [\"id\", \"kt_account_profile_details\", 1, \"collapse\", \"show\"], [\"novalidate\", \"novalidate\", 3, \"formGroup\", \"ngSubmit\"], [1, \"card-body\", \"border-top\", \"p-9\"], [1, \"row\", \"mb-6\"], [1, \"col-lg-4\", \"col-form-label\", \"required\", \"fw-bold\", \"fs-6\"], [1, \"col-lg-8\"], [1, \"row\"], [1, \"col-lg-6\", \"fv-row\"], [\"type\", \"text\", \"placeholder\", \"libelle\", \"name\", \"libelle\", \"formControlName\", \"libelle\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", \"mb-3\", \"mb-lg-0\"], [\"style\", \"color:red\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"card-footer\", \"d-flex\", \"justify-content-end\", \"py-6\", \"px-9\"], [\"alert-success\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"], [1, \"mb-lg-15\", \"alert\", \"alert-success\"], [1, \"alert-text\", \"font-weight-bold\"], [\"clas\", \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"]],\n    template: function AutorisationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Autorisation\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AutorisationComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.saveSettings();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Libelle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11);\n        i0.ɵɵelement(14, \"input\", 12);\n        i0.ɵɵtemplate(15, AutorisationComponent_div_15_Template, 2, 0, \"div\", 13);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵtemplate(17, AutorisationComponent_div_17_Template, 4, 1, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 15)(19, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function AutorisationComponent_Template_button_click_19_listener() {\n          return ctx.saveSettings();\n        });\n        i0.ɵɵtemplate(20, AutorisationComponent_ng_container_20_Template, 2, 0, \"ng-container\", 14);\n        i0.ɵɵtemplate(21, AutorisationComponent_ng_container_21_Template, 4, 3, \"ng-container\", 14);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.AddUserForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorfeildName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.success);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isLoading)(\"disabled\", ctx.allreadyexiste);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i5.NativeElementInjectorDirective, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return AutorisationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}