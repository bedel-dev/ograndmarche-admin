{"ast":null,"code":"import { getCSSVariableValue } from '../../../../../kt/_utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../dropdown-menus/dropdown-menu1/dropdown-menu1.component\";\nimport * as i2 from \"ng-inline-svg-2\";\nimport * as i3 from \"ng-apexcharts\";\nexport let MixedWidget8Component = /*#__PURE__*/(() => {\n  class MixedWidget8Component {\n    constructor() {\n      this.chartColor = '';\n      this.chartOptions = {};\n    }\n\n    ngOnInit() {\n      this.chartOptions = getChartOptions(this.chartHeight, this.chartColor);\n    }\n\n    refreshCharts() {\n      return getChartOptions(this.chartHeight, this.chartColor);\n    }\n\n  }\n\n  MixedWidget8Component.ɵfac = function MixedWidget8Component_Factory(t) {\n    return new (t || MixedWidget8Component)();\n  };\n\n  MixedWidget8Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MixedWidget8Component,\n    selectors: [[\"app-mixed-widget8\"]],\n    inputs: {\n      chartColor: \"chartColor\",\n      chartHeight: \"chartHeight\"\n    },\n    decls: 51,\n    vars: 16,\n    consts: [[1, \"card-header\", \"border-0\", \"py-5\"], [1, \"card-title\", \"align-items-start\", \"flex-column\"], [1, \"card-label\", \"fw-bolder\", \"fs-3\", \"mb-1\"], [1, \"text-muted\", \"fw-bold\", \"fs-7\"], [1, \"card-toolbar\"], [\"type\", \"button\", \"data-kt-menu-trigger\", \"click\", \"data-kt-menu-placement\", \"bottom-end\", \"data-kt-menu-flip\", \"top-end\", 1, \"btn\", \"btn-sm\", \"btn-icon\", \"btn-color-primary\", \"btn-active-light-primary\"], [1, \"svg-icon\", \"svg-icon-2\", 3, \"inlineSVG\"], [1, \"card-body\", \"d-flex\", \"flex-column\"], [1, \"mixed-widget-5-chart\", \"card-rounded-top\"], [\"chartRef\", \"\"], [3, \"series\", \"chart\", \"xaxis\", \"yaxis\", \"dataLabels\", \"stroke\", \"legend\", \"fill\", \"states\", \"tooltip\", \"colors\", \"markers\", \"plotOptions\"], [1, \"mt-5\"], [1, \"d-flex\", \"flex-stack\", \"mb-5\"], [1, \"d-flex\", \"align-items-center\", \"me-2\"], [1, \"symbol\", \"symbol-50px\", \"me-3\"], [1, \"symbol-label\", \"bg-light\"], [\"src\", \"./assets/media/svg/brand-logos/plurk.svg\", \"alt\", \"\", 1, \"h-50\"], [\"href\", \"#\", 1, \"fs-6\", \"text-gray-800\", \"text-hover-primary\", \"fw-bolder\"], [1, \"fs-7\", \"text-muted\", \"fw-bold\", \"mt-1\"], [1, \"badge\", \"badge-light\", \"fw-bold\", \"py-4\", \"px-3\"], [\"src\", \"./assets/media/svg/brand-logos/figma-1.svg\", \"alt\", \"\", 1, \"h-50\"], [1, \"d-flex\", \"flex-stack\"], [\"src\", \"./assets/media/svg/brand-logos/vimeo.svg\", \"alt\", \"\", 1, \"h-50\"], [1, \"py-1\"]],\n    template: function MixedWidget8Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Trends\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"Latest trends\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"button\", 5);\n        i0.ɵɵelement(8, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"app-dropdown-menu1\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8, 9);\n        i0.ɵɵelement(13, \"apx-chart\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"div\", 12)(16, \"div\", 13)(17, \"div\", 14)(18, \"div\", 15);\n        i0.ɵɵelement(19, \"img\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\")(21, \"a\", 17);\n        i0.ɵɵtext(22, \" Top Authors \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 18);\n        i0.ɵɵtext(24, \" Ricky Hunt, Sandra Trepp \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 19);\n        i0.ɵɵtext(26, \"+82$\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 12)(28, \"div\", 13)(29, \"div\", 14)(30, \"div\", 15);\n        i0.ɵɵelement(31, \"img\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\")(33, \"a\", 17);\n        i0.ɵɵtext(34, \" Top Sales \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 18);\n        i0.ɵɵtext(36, \"PitStop Emails\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 19);\n        i0.ɵɵtext(38, \"+82$\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 21)(40, \"div\", 13)(41, \"div\", 14)(42, \"div\", 15);\n        i0.ɵɵelement(43, \"img\", 22);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 23)(45, \"a\", 17);\n        i0.ɵɵtext(46, \" Top Engagement \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 18);\n        i0.ɵɵtext(48, \"KT.com\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"div\", 19);\n        i0.ɵɵtext(50, \"+82$\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"inlineSVG\", \"./assets/media/icons/duotune/general/gen024.svg\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵstyleProp(\"height\", ctx.chartHeight);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"xaxis\", ctx.chartOptions.xaxis)(\"yaxis\", ctx.chartOptions.yaxis)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"stroke\", ctx.chartOptions.stroke)(\"legend\", ctx.chartOptions.legend)(\"fill\", ctx.chartOptions.fill)(\"states\", ctx.chartOptions.states)(\"tooltip\", ctx.chartOptions.tooltip)(\"colors\", ctx.chartOptions.colors)(\"markers\", ctx.chartOptions.markers)(\"plotOptions\", ctx.chartOptions.plotOptions);\n      }\n    },\n    dependencies: [i1.DropdownMenu1Component, i2.InlineSVGDirective, i3.ChartComponent],\n    encapsulation: 2\n  });\n  return MixedWidget8Component;\n})();\n\nfunction getChartOptions(chartHeight, chartColor) {\n  const labelColor = getCSSVariableValue('--kt-gray-800');\n  const strokeColor = getCSSVariableValue('--kt-gray-300');\n  const baseColor = getCSSVariableValue('--kt-' + chartColor);\n  const lightColor = getCSSVariableValue('--kt-' + chartColor + '-light');\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [30, 30, 60, 25, 25, 40]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    fill1: {\n      type: 'gradient',\n      opacity: 1,\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 0.5,\n        gradientToColors: undefined,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 0.375,\n        stops: [25, 50, 100],\n        colorStops: []\n      }\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [baseColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: 'front',\n        stroke: {\n          color: strokeColor,\n          width: 1,\n          dashArray: 3\n        }\n      },\n      tooltip: {\n        enabled: true,\n        formatter: undefined,\n        offsetY: 0,\n        style: {\n          fontSize: '12px'\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 65,\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      }\n    },\n    colors: [lightColor],\n    markers: {\n      colors: [lightColor],\n      // @ts-ignore\n      strokeColor: [baseColor],\n      strokeWidth: 3\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}