{"ast":null,"code":"import { getCSSVariableValue } from '../../../../../../kt/_utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"min-width\": a0,\n    \"min-height\": a1\n  };\n};\n\nexport let CardsWidget17Component = /*#__PURE__*/(() => {\n  class CardsWidget17Component {\n    constructor() {\n      this.chartOptions = {};\n      this.cssClass = '';\n      this.chartSize = 70;\n      this.chartLine = 11;\n      this.chartRotate = 145;\n      this.AmoutGlobalTransaction = 0;\n      this.rembourser = 0;\n      this.NoNrembourser = 0;\n    }\n\n    ngOnInit() {\n      setTimeout(() => {\n        initChart(this.chartSize, this.chartLine, this.chartRotate);\n      }, 10);\n    }\n\n  }\n\n  CardsWidget17Component.ɵfac = function CardsWidget17Component_Factory(t) {\n    return new (t || CardsWidget17Component)();\n  };\n\n  CardsWidget17Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardsWidget17Component,\n    selectors: [[\"app-cards-widget17\"]],\n    inputs: {\n      cssClass: \"cssClass\",\n      chartSize: \"chartSize\",\n      chartLine: \"chartLine\",\n      chartRotate: \"chartRotate\",\n      AmoutGlobalTransaction: \"AmoutGlobalTransaction\",\n      rembourser: \"rembourser\",\n      NoNrembourser: \"NoNrembourser\"\n    },\n    decls: 28,\n    vars: 19,\n    consts: [[\"img\", \"./assets/media/patterns/vector-2.png\", 1, \"card\", \"card-flush\", 2, \"background-color\", \"#E4E6EF\", \"height\", \"100% !important\", 3, \"ngClass\"], [1, \"card-header\", \"pt-5\"], [1, \"card-title\", \"d-flex\", \"flex-column\"], [1, \"d-flex\", \"align-items-center\"], [1, \"fs-4\", \"fw-semibold\", \"text-gray-400\", \"me-1\", \"align-self-start\"], [1, \"fs-2hx\", \"fw-bold\", \"text-dark\", \"me-2\", \"lh-1\", \"ls-n2\"], [1, \"text-gray-400\", \"pt-1\", \"fw-semibold\", \"fs-6\"], [1, \"card-body\", \"pt-2\", \"pb-4\", \"d-flex\", \"flex-wrap\", \"align-items-center\"], [1, \"d-flex\", \"flex-center\", \"me-5\", \"pt-2\"], [\"id\", \"kt_card_widget_17_chart\", 3, \"ngStyle\"], [1, \"d-flex\", \"flex-column\", \"content-justify-center\", \"flex-row-fluid\"], [1, \"d-flex\", \"fw-semibold\", \"align-items-center\"], [1, \"bullet\", \"w-8px\", \"h-3px\", \"rounded-2\", \"bg-success\", \"me-3\"], [1, \"text-gray-500\", \"flex-grow-1\", \"me-4\"], [1, \"fw-bolder\", \"text-gray-700\", \"text-xxl-end\"], [1, \"d-flex\", \"fw-semibold\", \"align-items-center\", \"my-3\"], [1, \"bullet\", \"w-8px\", \"h-3px\", \"rounded-2\", \"bg-primary\", \"me-3\"]],\n    template: function CardsWidget17Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"span\", 4);\n        i0.ɵɵelementStart(5, \"span\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"number\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"span\", 6);\n        i0.ɵɵtext(9, \"Montant Totals des commandes \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8);\n        i0.ɵɵelement(12, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11);\n        i0.ɵɵelement(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtext(17, \"Termin\\u00E9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"number\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 15);\n        i0.ɵɵelement(22, \"div\", 16);\n        i0.ɵɵelementStart(23, \"div\", 13);\n        i0.ɵɵtext(24, \"En cours\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 14);\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"number\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.cssClass);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(7, 7, ctx.AmoutGlobalTransaction, \"1.0-0\"), \" FCFA\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(16, _c0, ctx.chartSize + \"px\", ctx.chartSize + \"px\"));\n        i0.ɵɵattribute(\"data-kt-size\", ctx.chartSize)(\"data-kt-line\", ctx.chartLine);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(20, 10, ctx.rembourser, \"1.0-0\"), \" FCFA\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind2(27, 13, ctx.NoNrembourser, \"1.0-0\"), \" FCFA\");\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgStyle, i1.DecimalPipe]\n  });\n  return CardsWidget17Component;\n})();\n\nconst initChart = function (chartSize = 70, chartLine = 11, chartRotate = 145) {\n  const el = document.getElementById('kt_card_widget_17_chart');\n\n  if (!el) {\n    return;\n  }\n\n  var options = {\n    size: chartSize,\n    lineWidth: chartLine,\n    rotate: chartRotate //percent:  el.getAttribute('data-kt-percent') ,\n\n  };\n  const canvas = document.createElement('canvas');\n  const span = document.createElement('span'); // @ts-ignore\n\n  if (typeof G_vmlCanvasManager !== 'undefined') {\n    // @ts-ignore\n    G_vmlCanvasManager.initElement(canvas);\n  }\n\n  const ctx = canvas.getContext('2d');\n  canvas.width = canvas.height = options.size;\n  el.appendChild(span);\n  el.appendChild(canvas); // @ts-ignore\n\n  ctx.translate(options.size / 2, options.size / 2); // change center\n  // @ts-ignore\n\n  ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n  //imd = ctx.getImageData(0, 0, 240, 240);\n\n  const radius = (options.size - options.lineWidth) / 2;\n\n  const drawCircle = function (color, lineWidth, percent) {\n    percent = Math.min(Math.max(0, percent || 1), 1);\n\n    if (!ctx) {\n      return;\n    }\n\n    ctx.beginPath();\n    ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n    ctx.strokeStyle = color;\n    ctx.lineCap = 'round'; // butt, round or square\n\n    ctx.lineWidth = lineWidth;\n    ctx.stroke();\n  }; // Init\n\n\n  drawCircle('#E4E6EF', options.lineWidth, 100 / 100);\n  drawCircle(getCSSVariableValue('--kt-primary'), options.lineWidth, 100 / 150);\n  drawCircle(getCSSVariableValue('--kt-success'), options.lineWidth, 100 / 250);\n};","map":null,"metadata":{},"sourceType":"module"}