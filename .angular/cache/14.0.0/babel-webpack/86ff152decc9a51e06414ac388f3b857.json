{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class PageInfo {\n  constructor() {\n    this.breadcrumbs = [];\n    this.title = '';\n  }\n\n}\nexport let PageInfoService = /*#__PURE__*/(() => {\n  class PageInfoService {\n    constructor() {\n      this.title = new BehaviorSubject('Dashboard');\n      this.description = new BehaviorSubject('');\n      this.breadcrumbs = new BehaviorSubject([]);\n    }\n\n    setTitle(_title) {\n      this.title.next(_title);\n    }\n\n    updateTitle(_title) {\n      setTimeout(() => {\n        this.setTitle(_title);\n      }, 1);\n    }\n\n    setDescription(_title) {\n      this.description.next(_title);\n    }\n\n    updateDescription(_description) {\n      setTimeout(() => {\n        this.setDescription(_description);\n      }, 1);\n    }\n\n    setBreadcrumbs(_bs) {\n      this.breadcrumbs.next(_bs);\n    }\n\n    updateBreadcrumbs(_bs) {\n      setTimeout(() => {\n        this.setBreadcrumbs(_bs);\n      }, 20);\n    }\n\n    calculateTitle() {\n      const asideTitle = this.calculateTitleInMenu('kt_app_sidebar');\n      const headerTitle = this.calculateTitleInMenu('kt_app_header_wrapper');\n      const title = asideTitle || headerTitle || '';\n      this.setTitle(title);\n    }\n\n    calculateTitleInMenu(menuId) {\n      const menu = document.getElementById(menuId);\n\n      if (!menu) {\n        return;\n      }\n\n      const allActiveMenuLinks = Array.from(menu.querySelectorAll('a.menu-link')).filter(link => link.classList.contains('active'));\n\n      if (!allActiveMenuLinks || allActiveMenuLinks.length === 0) {\n        return;\n      }\n\n      const titleSpan = allActiveMenuLinks[0].querySelector('span.menu-title');\n\n      if (!titleSpan) {\n        return;\n      }\n\n      return titleSpan.innerText;\n    }\n\n    calculateBreadcrumbs() {\n      const asideBc = this.calculateBreadcrumbsInMenu('asideMenu');\n      const headerBc = this.calculateBreadcrumbsInMenu('#kt_header_menu');\n      const bc = asideBc && asideBc.length > 0 ? asideBc : headerBc;\n\n      if (!bc) {\n        this.setBreadcrumbs([]);\n        return;\n      }\n\n      this.setBreadcrumbs(bc);\n    }\n\n    calculateBreadcrumbsInMenu(menuId) {\n      const result = [];\n      const menu = document.getElementById(menuId);\n\n      if (!menu) {\n        return;\n      }\n\n      const allActiveParents = Array.from(menu.querySelectorAll('div.menu-item')).filter(link => link.classList.contains('here'));\n\n      if (!allActiveParents || allActiveParents.length === 0) {\n        return;\n      }\n\n      allActiveParents.forEach(parent => {\n        const titleSpan = parent.querySelector('span.menu-title');\n\n        if (!titleSpan) {\n          return;\n        }\n\n        const title = titleSpan.innerText;\n        const path = titleSpan.getAttribute('data-link');\n\n        if (!path) {\n          return;\n        }\n\n        result.push({\n          title,\n          path,\n          isSeparator: false,\n          isActive: false\n        }); // add separator\n\n        result.push({\n          title: '',\n          path: '',\n          isSeparator: true,\n          isActive: false\n        });\n      });\n      return result;\n    }\n\n  }\n\n  PageInfoService.ɵfac = function PageInfoService_Factory(t) {\n    return new (t || PageInfoService)();\n  };\n\n  PageInfoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PageInfoService,\n    factory: PageInfoService.ɵfac,\n    providedIn: 'root'\n  });\n  return PageInfoService;\n})();","map":null,"metadata":{},"sourceType":"module"}